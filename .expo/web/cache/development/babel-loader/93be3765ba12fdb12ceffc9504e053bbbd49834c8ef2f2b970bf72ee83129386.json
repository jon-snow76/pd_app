{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTasks = exports.default = exports.TasksProvider = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _storage = require(\"../utils/storage\");\nvar _validation = require(\"../utils/validation\");\nvar _helpers = require(\"../utils/helpers\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/vaishnavkrishnan/Desktop/pd_app/src/context/TasksContext.tsx\";\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar initialState = {\n  tasks: [],\n  loading: false,\n  error: null,\n  filter: 'all',\n  sortBy: 'dueDate'\n};\nvar tasksReducer = function tasksReducer(state, action) {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return Object.assign({}, state, {\n        loading: action.payload\n      });\n    case 'SET_ERROR':\n      return Object.assign({}, state, {\n        error: action.payload,\n        loading: false\n      });\n    case 'SET_TASKS':\n      return Object.assign({}, state, {\n        tasks: action.payload,\n        loading: false,\n        error: null\n      });\n    case 'ADD_TASK':\n      return Object.assign({}, state, {\n        tasks: [].concat((0, _toConsumableArray2.default)(state.tasks), [action.payload]),\n        error: null\n      });\n    case 'UPDATE_TASK':\n      return Object.assign({}, state, {\n        tasks: state.tasks.map(function (task) {\n          return task.id === action.payload.id ? action.payload : task;\n        }),\n        error: null\n      });\n    case 'DELETE_TASK':\n      return Object.assign({}, state, {\n        tasks: state.tasks.filter(function (task) {\n          return task.id !== action.payload;\n        }),\n        error: null\n      });\n    case 'SET_FILTER':\n      return Object.assign({}, state, {\n        filter: action.payload\n      });\n    case 'SET_SORT':\n      return Object.assign({}, state, {\n        sortBy: action.payload\n      });\n    case 'TOGGLE_TASK_COMPLETION':\n      return Object.assign({}, state, {\n        tasks: state.tasks.map(function (task) {\n          return task.id === action.payload ? Object.assign({}, task, {\n            isCompleted: !task.isCompleted,\n            completedAt: !task.isCompleted ? new Date() : undefined\n          }) : task;\n        }),\n        error: null\n      });\n    default:\n      return state;\n  }\n};\nvar TasksContext = (0, _react.createContext)(undefined);\nvar TasksProvider = exports.TasksProvider = function TasksProvider(_ref) {\n  var children = _ref.children;\n  var _useReducer = (0, _react.useReducer)(tasksReducer, initialState),\n    _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  (0, _react.useEffect)(function () {\n    loadTasksData();\n  }, []);\n  var loadTasksData = function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: true\n        });\n        var tasks = yield (0, _storage.loadTasks)();\n        dispatch({\n          type: 'SET_TASKS',\n          payload: tasks\n        });\n      } catch (error) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to load tasks'\n        });\n        console.error('Error loading tasks:', error);\n      }\n    });\n    return function loadTasksData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* (taskData) {\n      try {\n        var validation = (0, _validation.validateTask)(taskData);\n        if (!validation.isValid) {\n          return validation;\n        }\n        var newTask = Object.assign({}, taskData, {\n          id: (0, _helpers.generateId)()\n        });\n        yield (0, _storage.addTask)(newTask);\n        dispatch({\n          type: 'ADD_TASK',\n          payload: newTask\n        });\n        return {\n          isValid: true,\n          errors: []\n        };\n      } catch (error) {\n        var errorMessage = 'Failed to add task';\n        dispatch({\n          type: 'SET_ERROR',\n          payload: errorMessage\n        });\n        console.error('Error adding task:', error);\n        return {\n          isValid: false,\n          errors: [errorMessage]\n        };\n      }\n    });\n    return function addTask(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var updateTask = function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (updatedTask) {\n      try {\n        var validation = (0, _validation.validateTask)(updatedTask);\n        if (!validation.isValid) {\n          return validation;\n        }\n        yield (0, _storage.updateTask)(updatedTask);\n        dispatch({\n          type: 'UPDATE_TASK',\n          payload: updatedTask\n        });\n        return {\n          isValid: true,\n          errors: []\n        };\n      } catch (error) {\n        var errorMessage = 'Failed to update task';\n        dispatch({\n          type: 'SET_ERROR',\n          payload: errorMessage\n        });\n        console.error('Error updating task:', error);\n        return {\n          isValid: false,\n          errors: [errorMessage]\n        };\n      }\n    });\n    return function updateTask(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var deleteTask = function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* (taskId) {\n      try {\n        yield (0, _storage.deleteTask)(taskId);\n        dispatch({\n          type: 'DELETE_TASK',\n          payload: taskId\n        });\n      } catch (error) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to delete task'\n        });\n        console.error('Error deleting task:', error);\n      }\n    });\n    return function deleteTask(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var toggleTaskCompletion = function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* (taskId) {\n      try {\n        dispatch({\n          type: 'TOGGLE_TASK_COMPLETION',\n          payload: taskId\n        });\n        var updatedTask = state.tasks.find(function (task) {\n          return task.id === taskId;\n        });\n        if (updatedTask) {\n          var taskToSave = Object.assign({}, updatedTask, {\n            isCompleted: !updatedTask.isCompleted,\n            completedAt: !updatedTask.isCompleted ? new Date() : undefined\n          });\n          yield (0, _storage.updateTask)(taskToSave);\n        }\n      } catch (error) {\n        dispatch({\n          type: 'TOGGLE_TASK_COMPLETION',\n          payload: taskId\n        });\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to update task status'\n        });\n        console.error('Error toggling task completion:', error);\n      }\n    });\n    return function toggleTaskCompletion(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var setFilter = function setFilter(filter) {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: filter\n    });\n  };\n  var setSortBy = function setSortBy(sortBy) {\n    dispatch({\n      type: 'SET_SORT',\n      payload: sortBy\n    });\n  };\n  var getFilteredAndSortedTasks = function getFilteredAndSortedTasks() {\n    var filteredTasks = (0, _toConsumableArray2.default)(state.tasks);\n    switch (state.filter) {\n      case 'pending':\n        filteredTasks = filteredTasks.filter(function (task) {\n          return !task.isCompleted;\n        });\n        break;\n      case 'completed':\n        filteredTasks = filteredTasks.filter(function (task) {\n          return task.isCompleted;\n        });\n        break;\n      case 'overdue':\n        filteredTasks = filteredTasks.filter(function (task) {\n          return !task.isCompleted && (0, _helpers.isPastDate)(task.dueDate);\n        });\n        break;\n      case 'today':\n        var today = (0, _helpers.formatDateString)(new Date());\n        filteredTasks = filteredTasks.filter(function (task) {\n          return (0, _helpers.formatDateString)(task.dueDate) === today;\n        });\n        break;\n      case 'high':\n        filteredTasks = filteredTasks.filter(function (task) {\n          return task.priority === 'high';\n        });\n        break;\n      case 'medium':\n        filteredTasks = filteredTasks.filter(function (task) {\n          return task.priority === 'medium';\n        });\n        break;\n      case 'low':\n        filteredTasks = filteredTasks.filter(function (task) {\n          return task.priority === 'low';\n        });\n        break;\n      case 'all':\n      default:\n        break;\n    }\n    filteredTasks.sort(function (a, b) {\n      switch (state.sortBy) {\n        case 'priority':\n          var priorityOrder = {\n            high: 3,\n            medium: 2,\n            low: 1\n          };\n          return priorityOrder[b.priority] - priorityOrder[a.priority];\n        case 'created':\n          return a.id.localeCompare(b.id);\n        case 'alphabetical':\n          return a.title.localeCompare(b.title);\n        case 'dueDate':\n        default:\n          return a.dueDate.getTime() - b.dueDate.getTime();\n      }\n    });\n    return filteredTasks;\n  };\n  var getTaskStats = function getTaskStats() {\n    var total = state.tasks.length;\n    var completed = state.tasks.filter(function (task) {\n      return task.isCompleted;\n    }).length;\n    var pending = total - completed;\n    var overdue = state.tasks.filter(function (task) {\n      return !task.isCompleted && (0, _helpers.isPastDate)(task.dueDate);\n    }).length;\n    var today = (0, _helpers.formatDateString)(new Date());\n    var todayTasks = state.tasks.filter(function (task) {\n      return (0, _helpers.formatDateString)(task.dueDate) === today;\n    }).length;\n    var highPriority = state.tasks.filter(function (task) {\n      return task.priority === 'high' && !task.isCompleted;\n    }).length;\n    return {\n      total: total,\n      completed: completed,\n      pending: pending,\n      overdue: overdue,\n      today: todayTasks,\n      highPriority: highPriority\n    };\n  };\n  var getTasksByCategory = function getTasksByCategory(category) {\n    return state.tasks.filter(function (task) {\n      return task.category === category;\n    });\n  };\n  var getTasksByPriority = function getTasksByPriority(priority) {\n    return state.tasks.filter(function (task) {\n      return task.priority === priority;\n    });\n  };\n  var getOverdueTasks = function getOverdueTasks() {\n    return state.tasks.filter(function (task) {\n      return !task.isCompleted && (0, _helpers.isPastDate)(task.dueDate);\n    });\n  };\n  var getTodayTasks = function getTodayTasks() {\n    var today = (0, _helpers.formatDateString)(new Date());\n    return state.tasks.filter(function (task) {\n      return (0, _helpers.formatDateString)(task.dueDate) === today;\n    });\n  };\n  var contextValue = {\n    state: state,\n    loadTasks: loadTasksData,\n    addTask: addTask,\n    updateTask: updateTask,\n    deleteTask: deleteTask,\n    toggleTaskCompletion: toggleTaskCompletion,\n    setFilter: setFilter,\n    setSortBy: setSortBy,\n    getFilteredAndSortedTasks: getFilteredAndSortedTasks,\n    getTaskStats: getTaskStats,\n    getTasksByCategory: getTasksByCategory,\n    getTasksByPriority: getTasksByPriority,\n    getOverdueTasks: getOverdueTasks,\n    getTodayTasks: getTodayTasks\n  };\n  return (0, _jsxRuntime.jsx)(TasksContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n};\nvar useTasks = exports.useTasks = function useTasks() {\n  var context = (0, _react.useContext)(TasksContext);\n  if (context === undefined) {\n    throw new Error('useTasks must be used within a TasksProvider');\n  }\n  return context;\n};\nvar _default = exports.default = TasksContext;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_storage","_validation","_helpers","_jsxRuntime","_this","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","initialState","tasks","loading","error","filter","sortBy","tasksReducer","state","action","type","assign","payload","concat","_toConsumableArray2","map","task","id","isCompleted","completedAt","Date","undefined","TasksContext","createContext","TasksProvider","exports","_ref","children","_useReducer","useReducer","_useReducer2","_slicedToArray2","dispatch","useEffect","loadTasksData","_ref2","_asyncToGenerator2","loadTasks","console","apply","arguments","addTask","_ref3","taskData","validation","validateTask","isValid","newTask","generateId","addTaskToStorage","errors","errorMessage","_x","updateTask","_ref4","updatedTask","updateTaskInStorage","_x2","deleteTask","_ref5","taskId","deleteTaskFromStorage","_x3","toggleTaskCompletion","_ref6","find","taskToSave","_x4","setFilter","setSortBy","getFilteredAndSortedTasks","filteredTasks","isPastDate","dueDate","today","formatDateString","priority","sort","a","b","priorityOrder","high","medium","low","localeCompare","title","getTime","getTaskStats","total","length","completed","pending","overdue","todayTasks","highPriority","getTasksByCategory","category","getTasksByPriority","getOverdueTasks","getTodayTasks","contextValue","jsx","Provider","value","useTasks","context","useContext","Error","_default"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/src/context/TasksContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { Task, ValidationResult } from '../types';\nimport {\n  loadTasks,\n  saveTasks,\n  addTask as addTaskToStorage,\n  updateTask as updateTaskInStorage,\n  deleteTask as deleteTaskFromStorage,\n} from '../utils/storage';\nimport { validateTask } from '../utils/validation';\nimport { generateId, isPastDate, formatDateString } from '../utils/helpers';\n\n// State interface\ninterface TasksState {\n  tasks: Task[];\n  loading: boolean;\n  error: string | null;\n  filter: TaskFilter;\n  sortBy: TaskSortOption;\n}\n\n// Filter and sort options\nexport type TaskFilter = 'all' | 'pending' | 'completed' | 'overdue' | 'today' | 'high' | 'medium' | 'low';\nexport type TaskSortOption = 'dueDate' | 'priority' | 'created' | 'alphabetical';\n\n// Action types\ntype TasksAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'SET_TASKS'; payload: Task[] }\n  | { type: 'ADD_TASK'; payload: Task }\n  | { type: 'UPDATE_TASK'; payload: Task }\n  | { type: 'DELETE_TASK'; payload: string }\n  | { type: 'SET_FILTER'; payload: TaskFilter }\n  | { type: 'SET_SORT'; payload: TaskSortOption }\n  | { type: 'TOGGLE_TASK_COMPLETION'; payload: string };\n\n// Initial state\nconst initialState: TasksState = {\n  tasks: [],\n  loading: false,\n  error: null,\n  filter: 'all',\n  sortBy: 'dueDate',\n};\n\n// Reducer function\nconst tasksReducer = (state: TasksState, action: TasksAction): TasksState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload, loading: false };\n    \n    case 'SET_TASKS':\n      return { ...state, tasks: action.payload, loading: false, error: null };\n    \n    case 'ADD_TASK':\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload],\n        error: null,\n      };\n    \n    case 'UPDATE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task =>\n          task.id === action.payload.id ? action.payload : task\n        ),\n        error: null,\n      };\n    \n    case 'DELETE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload),\n        error: null,\n      };\n    \n    case 'SET_FILTER':\n      return { ...state, filter: action.payload };\n    \n    case 'SET_SORT':\n      return { ...state, sortBy: action.payload };\n    \n    case 'TOGGLE_TASK_COMPLETION':\n      return {\n        ...state,\n        tasks: state.tasks.map(task =>\n          task.id === action.payload\n            ? {\n                ...task,\n                isCompleted: !task.isCompleted,\n                completedAt: !task.isCompleted ? new Date() : undefined,\n              }\n            : task\n        ),\n        error: null,\n      };\n    \n    default:\n      return state;\n  }\n};\n\n// Context interface\ninterface TasksContextType {\n  state: TasksState;\n  // Task management\n  loadTasks: () => Promise<void>;\n  addTask: (task: Omit<Task, 'id'>) => Promise<ValidationResult>;\n  updateTask: (task: Task) => Promise<ValidationResult>;\n  deleteTask: (taskId: string) => Promise<void>;\n  toggleTaskCompletion: (taskId: string) => Promise<void>;\n  // Filtering and sorting\n  setFilter: (filter: TaskFilter) => void;\n  setSortBy: (sortBy: TaskSortOption) => void;\n  getFilteredAndSortedTasks: () => Task[];\n  // Statistics\n  getTaskStats: () => {\n    total: number;\n    completed: number;\n    pending: number;\n    overdue: number;\n    today: number;\n    highPriority: number;\n  };\n  // Utility functions\n  getTasksByCategory: (category: string) => Task[];\n  getTasksByPriority: (priority: 'high' | 'medium' | 'low') => Task[];\n  getOverdueTasks: () => Task[];\n  getTodayTasks: () => Task[];\n}\n\n// Create context\nconst TasksContext = createContext<TasksContextType | undefined>(undefined);\n\n// Provider component\ninterface TasksProviderProps {\n  children: ReactNode;\n}\n\nexport const TasksProvider: React.FC<TasksProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(tasksReducer, initialState);\n\n  // Load tasks on mount\n  useEffect(() => {\n    loadTasksData();\n  }, []);\n\n  // Task management functions\n  const loadTasksData = async (): Promise<void> => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const tasks = await loadTasks();\n      dispatch({ type: 'SET_TASKS', payload: tasks });\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to load tasks' });\n      console.error('Error loading tasks:', error);\n    }\n  };\n\n  const addTask = async (taskData: Omit<Task, 'id'>): Promise<ValidationResult> => {\n    try {\n      // Validate task data\n      const validation = validateTask(taskData);\n      if (!validation.isValid) {\n        return validation;\n      }\n\n      // Create task with ID\n      const newTask: Task = {\n        ...taskData,\n        id: generateId(),\n      };\n\n      // Save to storage\n      await addTaskToStorage(newTask);\n      \n      // Update state\n      dispatch({ type: 'ADD_TASK', payload: newTask });\n\n      return { isValid: true, errors: [] };\n    } catch (error) {\n      const errorMessage = 'Failed to add task';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      console.error('Error adding task:', error);\n      return { isValid: false, errors: [errorMessage] };\n    }\n  };\n\n  const updateTask = async (updatedTask: Task): Promise<ValidationResult> => {\n    try {\n      // Validate task data\n      const validation = validateTask(updatedTask);\n      if (!validation.isValid) {\n        return validation;\n      }\n\n      // Save to storage\n      await updateTaskInStorage(updatedTask);\n      \n      // Update state\n      dispatch({ type: 'UPDATE_TASK', payload: updatedTask });\n\n      return { isValid: true, errors: [] };\n    } catch (error) {\n      const errorMessage = 'Failed to update task';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      console.error('Error updating task:', error);\n      return { isValid: false, errors: [errorMessage] };\n    }\n  };\n\n  const deleteTask = async (taskId: string): Promise<void> => {\n    try {\n      await deleteTaskFromStorage(taskId);\n      dispatch({ type: 'DELETE_TASK', payload: taskId });\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to delete task' });\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const toggleTaskCompletion = async (taskId: string): Promise<void> => {\n    try {\n      // Update state first for immediate UI feedback\n      dispatch({ type: 'TOGGLE_TASK_COMPLETION', payload: taskId });\n      \n      // Find the updated task and save to storage\n      const updatedTask = state.tasks.find(task => task.id === taskId);\n      if (updatedTask) {\n        const taskToSave = {\n          ...updatedTask,\n          isCompleted: !updatedTask.isCompleted,\n          completedAt: !updatedTask.isCompleted ? new Date() : undefined,\n        };\n        await updateTaskInStorage(taskToSave);\n      }\n    } catch (error) {\n      // Revert the state change if storage fails\n      dispatch({ type: 'TOGGLE_TASK_COMPLETION', payload: taskId });\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to update task status' });\n      console.error('Error toggling task completion:', error);\n    }\n  };\n\n  // Filtering and sorting functions\n  const setFilter = (filter: TaskFilter): void => {\n    dispatch({ type: 'SET_FILTER', payload: filter });\n  };\n\n  const setSortBy = (sortBy: TaskSortOption): void => {\n    dispatch({ type: 'SET_SORT', payload: sortBy });\n  };\n\n  const getFilteredAndSortedTasks = (): Task[] => {\n    let filteredTasks = [...state.tasks];\n\n    // Apply filter\n    switch (state.filter) {\n      case 'pending':\n        filteredTasks = filteredTasks.filter(task => !task.isCompleted);\n        break;\n      case 'completed':\n        filteredTasks = filteredTasks.filter(task => task.isCompleted);\n        break;\n      case 'overdue':\n        filteredTasks = filteredTasks.filter(task => \n          !task.isCompleted && isPastDate(task.dueDate)\n        );\n        break;\n      case 'today':\n        const today = formatDateString(new Date());\n        filteredTasks = filteredTasks.filter(task => \n          formatDateString(task.dueDate) === today\n        );\n        break;\n      case 'high':\n        filteredTasks = filteredTasks.filter(task => task.priority === 'high');\n        break;\n      case 'medium':\n        filteredTasks = filteredTasks.filter(task => task.priority === 'medium');\n        break;\n      case 'low':\n        filteredTasks = filteredTasks.filter(task => task.priority === 'low');\n        break;\n      case 'all':\n      default:\n        // No filtering\n        break;\n    }\n\n    // Apply sorting\n    filteredTasks.sort((a, b) => {\n      switch (state.sortBy) {\n        case 'priority':\n          const priorityOrder = { high: 3, medium: 2, low: 1 };\n          return priorityOrder[b.priority] - priorityOrder[a.priority];\n        \n        case 'created':\n          // Assuming tasks are created in order of their IDs\n          return a.id.localeCompare(b.id);\n        \n        case 'alphabetical':\n          return a.title.localeCompare(b.title);\n        \n        case 'dueDate':\n        default:\n          return a.dueDate.getTime() - b.dueDate.getTime();\n      }\n    });\n\n    return filteredTasks;\n  };\n\n  // Statistics functions\n  const getTaskStats = () => {\n    const total = state.tasks.length;\n    const completed = state.tasks.filter(task => task.isCompleted).length;\n    const pending = total - completed;\n    const overdue = state.tasks.filter(task => \n      !task.isCompleted && isPastDate(task.dueDate)\n    ).length;\n    \n    const today = formatDateString(new Date());\n    const todayTasks = state.tasks.filter(task => \n      formatDateString(task.dueDate) === today\n    ).length;\n    \n    const highPriority = state.tasks.filter(task => \n      task.priority === 'high' && !task.isCompleted\n    ).length;\n\n    return {\n      total,\n      completed,\n      pending,\n      overdue,\n      today: todayTasks,\n      highPriority,\n    };\n  };\n\n  // Utility functions\n  const getTasksByCategory = (category: string): Task[] => {\n    return state.tasks.filter(task => task.category === category);\n  };\n\n  const getTasksByPriority = (priority: 'high' | 'medium' | 'low'): Task[] => {\n    return state.tasks.filter(task => task.priority === priority);\n  };\n\n  const getOverdueTasks = (): Task[] => {\n    return state.tasks.filter(task => \n      !task.isCompleted && isPastDate(task.dueDate)\n    );\n  };\n\n  const getTodayTasks = (): Task[] => {\n    const today = formatDateString(new Date());\n    return state.tasks.filter(task => \n      formatDateString(task.dueDate) === today\n    );\n  };\n\n  // Context value\n  const contextValue: TasksContextType = {\n    state,\n    loadTasks: loadTasksData,\n    addTask,\n    updateTask,\n    deleteTask,\n    toggleTaskCompletion,\n    setFilter,\n    setSortBy,\n    getFilteredAndSortedTasks,\n    getTaskStats,\n    getTasksByCategory,\n    getTasksByPriority,\n    getOverdueTasks,\n    getTodayTasks,\n  };\n\n  return (\n    <TasksContext.Provider value={contextValue}>\n      {children}\n    </TasksContext.Provider>\n  );\n};\n\n// Custom hook to use the context\nexport const useTasks = (): TasksContextType => {\n  const context = useContext(TasksContext);\n  if (context === undefined) {\n    throw new Error('useTasks must be used within a TasksProvider');\n  }\n  return context;\n};\n\nexport default TasksContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}