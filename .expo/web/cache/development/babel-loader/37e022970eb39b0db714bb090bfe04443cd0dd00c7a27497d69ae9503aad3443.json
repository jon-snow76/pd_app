{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useLinking;\nexports.series = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _core = require(\"@react-navigation/core\");\nvar _fastDeepEqual = _interopRequireDefault(require(\"fast-deep-equal\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createMemoryHistory = _interopRequireDefault(require(\"./createMemoryHistory\"));\nvar _ServerContext = _interopRequireDefault(require(\"./ServerContext\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar _findMatchingState = function findMatchingState(a, b) {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n  var aHistoryLength = a.history ? a.history.length : a.routes.length;\n  var bHistoryLength = b.history ? b.history.length : b.routes.length;\n  var aRoute = a.routes[a.index];\n  var bRoute = b.routes[b.index];\n  var aChildState = aRoute.state;\n  var bChildState = bRoute.state;\n  if (aHistoryLength !== bHistoryLength || aRoute.key !== bRoute.key || aChildState === undefined || bChildState === undefined || aChildState.key !== bChildState.key) {\n    return [a, b];\n  }\n  return _findMatchingState(aChildState, bChildState);\n};\nvar series = exports.series = function series(cb) {\n  var queue = Promise.resolve();\n  var callback = function callback() {\n    queue = queue.then(cb);\n  };\n  return callback;\n};\nvar linkingHandlers = [];\nfunction useLinking(ref, _ref) {\n  var independent = _ref.independent,\n    _ref$enabled = _ref.enabled,\n    enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n    config = _ref.config,\n    _ref$getStateFromPath = _ref.getStateFromPath,\n    getStateFromPath = _ref$getStateFromPath === void 0 ? _core.getStateFromPath : _ref$getStateFromPath,\n    _ref$getPathFromState = _ref.getPathFromState,\n    getPathFromState = _ref$getPathFromState === void 0 ? _core.getPathFromState : _ref$getPathFromState,\n    _ref$getActionFromSta = _ref.getActionFromState,\n    getActionFromState = _ref$getActionFromSta === void 0 ? _core.getActionFromState : _ref$getActionFromSta;\n  React.useEffect(function () {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n    if (independent) {\n      return undefined;\n    }\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(['Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:', \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\", '- Only a single instance of the root component is rendered'].join('\\n').trim());\n    }\n    var handler = Symbol();\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n    return function () {\n      var index = linkingHandlers.indexOf(handler);\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n  var _React$useState = React.useState(_createMemoryHistory.default),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n    history = _React$useState2[0];\n  var enabledRef = React.useRef(enabled);\n  var configRef = React.useRef(config);\n  var getStateFromPathRef = React.useRef(getStateFromPath);\n  var getPathFromStateRef = React.useRef(getPathFromState);\n  var getActionFromStateRef = React.useRef(getActionFromState);\n  React.useEffect(function () {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n    getActionFromStateRef.current = getActionFromState;\n  });\n  var server = React.useContext(_ServerContext.default);\n  var getInitialState = React.useCallback(function () {\n    var value;\n    if (enabledRef.current) {\n      var _ref2;\n      var location = (_ref2 = server === null || server === void 0 ? void 0 : server.location) != null ? _ref2 : typeof window !== 'undefined' ? window.location : undefined;\n      var path = location ? location.pathname + location.search : undefined;\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n    var thenable = {\n      then: function then(onfulfilled) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch: function _catch() {\n        return thenable;\n      }\n    };\n    return thenable;\n  }, []);\n  var previousIndexRef = React.useRef(undefined);\n  var previousStateRef = React.useRef(undefined);\n  var pendingPopStatePathRef = React.useRef(undefined);\n  React.useEffect(function () {\n    previousIndexRef.current = history.index;\n    return history.listen(function () {\n      var _previousIndexRef$cur;\n      var navigation = ref.current;\n      if (!navigation || !enabled) {\n        return;\n      }\n      var _window = window,\n        location = _window.location;\n      var path = location.pathname + location.search;\n      var index = history.index;\n      var previousIndex = (_previousIndexRef$cur = previousIndexRef.current) != null ? _previousIndexRef$cur : 0;\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n      var record = history.get(index);\n      if ((record === null || record === void 0 ? void 0 : record.path) === path && record !== null && record !== void 0 && record.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n      var state = getStateFromPathRef.current(path, configRef.current);\n      if (state) {\n        var rootState = navigation.getRootState();\n        if (state.routes.some(function (r) {\n          return !(rootState !== null && rootState !== void 0 && rootState.routeNames.includes(r.name));\n        })) {\n          console.warn(\"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\");\n          return;\n        }\n        if (index > previousIndex) {\n          var action = getActionFromStateRef.current(state, configRef.current);\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              console.warn(`An error occurred when trying to handle the link '${path}': ${typeof e === 'object' && e != null && 'message' in e ? e.message : e}`);\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n  React.useEffect(function () {\n    var _ref$current;\n    if (!enabled) {\n      return;\n    }\n    var getPathForRoute = function getPathForRoute(route, state) {\n      if (route !== null && route !== void 0 && route.path) {\n        var stateForPath = getStateFromPathRef.current(route.path, configRef.current);\n        if (stateForPath) {\n          var focusedRoute = (0, _core.findFocusedRoute)(stateForPath);\n          if (focusedRoute && focusedRoute.name === route.name && (0, _fastDeepEqual.default)(focusedRoute.params, route.params)) {\n            return route.path;\n          }\n        }\n      }\n      return getPathFromStateRef.current(state, configRef.current);\n    };\n    if (ref.current) {\n      var state = ref.current.getRootState();\n      if (state) {\n        var route = (0, _core.findFocusedRoute)(state);\n        var path = getPathForRoute(route, state);\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n        history.replace({\n          path: path,\n          state: state\n        });\n      }\n    }\n    var onStateChange = function () {\n      var _ref3 = (0, _asyncToGenerator2.default)(function* () {\n        var navigation = ref.current;\n        if (!navigation || !enabled) {\n          return;\n        }\n        var previousState = previousStateRef.current;\n        var state = navigation.getRootState();\n        if (!state) {\n          return;\n        }\n        var pendingPath = pendingPopStatePathRef.current;\n        var route = (0, _core.findFocusedRoute)(state);\n        var path = getPathForRoute(route, state);\n        previousStateRef.current = state;\n        pendingPopStatePathRef.current = undefined;\n        var _findMatchingState2 = _findMatchingState(previousState, state),\n          _findMatchingState3 = (0, _slicedToArray2.default)(_findMatchingState2, 2),\n          previousFocusedState = _findMatchingState3[0],\n          focusedState = _findMatchingState3[1];\n        if (previousFocusedState && focusedState && path !== pendingPath) {\n          var historyDelta = (focusedState.history ? focusedState.history.length : focusedState.routes.length) - (previousFocusedState.history ? previousFocusedState.history.length : previousFocusedState.routes.length);\n          if (historyDelta > 0) {\n            history.push({\n              path: path,\n              state: state\n            });\n          } else if (historyDelta < 0) {\n            var nextIndex = history.backIndex({\n              path: path\n            });\n            var currentIndex = history.index;\n            try {\n              if (nextIndex !== -1 && nextIndex < currentIndex && history.get(nextIndex - currentIndex)) {\n                yield history.go(nextIndex - currentIndex);\n              } else {\n                yield history.go(historyDelta);\n              }\n              history.replace({\n                path: path,\n                state: state\n              });\n            } catch (e) {}\n          } else {\n            history.replace({\n              path: path,\n              state: state\n            });\n          }\n        } else {\n          history.replace({\n            path: path,\n            state: state\n          });\n        }\n      });\n      return function onStateChange() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.addListener('state', series(onStateChange));\n  }, [enabled, history, ref]);\n  return {\n    getInitialState: getInitialState\n  };\n}","map":{"version":3,"names":["_core","require","_fastDeepEqual","_interopRequireDefault","React","_interopRequireWildcard","_createMemoryHistory","_ServerContext","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","findMatchingState","a","b","undefined","key","aHistoryLength","history","length","routes","bHistoryLength","aRoute","index","bRoute","aChildState","state","bChildState","series","exports","cb","queue","Promise","resolve","callback","then","linkingHandlers","useLinking","ref","_ref","independent","_ref$enabled","enabled","config","_ref$getStateFromPath","getStateFromPath","getStateFromPathDefault","_ref$getPathFromState","getPathFromState","getPathFromStateDefault","_ref$getActionFromSta","getActionFromState","getActionFromStateDefault","useEffect","process","env","NODE_ENV","console","error","join","trim","handler","Symbol","push","indexOf","splice","_React$useState","useState","createMemoryHistory","_React$useState2","_slicedToArray2","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","current","server","useContext","ServerContext","getInitialState","useCallback","value","_ref2","location","window","path","pathname","search","thenable","onfulfilled","catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","listen","_previousIndexRef$cur","navigation","_window","previousIndex","record","resetRoot","rootState","getRootState","some","routeNames","includes","name","warn","action","dispatch","message","_ref$current","getPathForRoute","route","stateForPath","focusedRoute","findFocusedRoute","isEqual","params","replace","onStateChange","_ref3","_asyncToGenerator2","previousState","pendingPath","_findMatchingState2","_findMatchingState3","previousFocusedState","focusedState","historyDelta","nextIndex","backIndex","currentIndex","go","apply","arguments","addListener"],"sources":["/Users/vaishnavkrishnan/Documents/projects/pd_app/node_modules/@react-navigation/native/src/useLinking.tsx"],"sourcesContent":["import {\n  findFocusedRoute,\n  getActionFromState as getActionFromStateDefault,\n  getPathFromState as getPathFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/core';\nimport isEqual from 'fast-deep-equal';\nimport * as React from 'react';\n\nimport createMemoryHistory from './createMemoryHistory';\nimport ServerContext from './ServerContext';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nexport const series = (cb: () => Promise<void>) => {\n  let queue = Promise.resolve();\n  const callback = () => {\n    queue = queue.then(cb);\n  };\n  return callback;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const server = React.useContext(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ??\n        (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const { location } = window;\n\n      const path = location.pathname + location.search;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        if (index > previousIndex) {\n          const action = getActionFromStateRef.current(\n            state,\n            configRef.current\n          );\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${\n                  typeof e === 'object' && e != null && 'message' in e\n                    ? e.message\n                    : e\n                }`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const getPathForRoute = (\n      route: ReturnType<typeof findFocusedRoute>,\n      state: NavigationState\n    ): string => {\n      // If the `route` object contains a `path`, use that path as long as `route.name` and `params` still match\n      // This makes sure that we preserve the original URL for wildcard routes\n      if (route?.path) {\n        const stateForPath = getStateFromPathRef.current(\n          route.path,\n          configRef.current\n        );\n\n        if (stateForPath) {\n          const focusedRoute = findFocusedRoute(stateForPath);\n\n          if (\n            focusedRoute &&\n            focusedRoute.name === route.name &&\n            isEqual(focusedRoute.params, route.params)\n          ) {\n            return route.path;\n          }\n        }\n      }\n\n      return getPathFromStateRef.current(state, configRef.current);\n    };\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n      const state = ref.current.getRootState();\n\n      if (state) {\n        const route = findFocusedRoute(state);\n        const path = getPathForRoute(route, state);\n\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n\n        history.replace({ path, state });\n      }\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      const state = navigation.getRootState();\n\n      // root state may not available, for example when root navigators switch inside the container\n      if (!state) {\n        return;\n      }\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const route = findFocusedRoute(state);\n      const path = getPathForRoute(route, state);\n\n      previousStateRef.current = state;\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(\n        previousState,\n        state\n      );\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history\n            ? focusedState.history.length\n            : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          try {\n            if (\n              nextIndex !== -1 &&\n              nextIndex < currentIndex &&\n              // We should only go back if the entry exists and it's less than current index\n              history.get(nextIndex - currentIndex)\n            ) {\n              // An existing entry for this path exists and it's less than current index, go back to that\n              await history.go(nextIndex - currentIndex);\n            } else {\n              // We couldn't find an existing entry to go back to, so we'll go back by the delta\n              // This won't be correct if multiple routes were pushed in one go before\n              // Usually this shouldn't happen and this is a fallback for that\n              await history.go(historyDelta);\n            }\n\n            // Store the updated state as well as fix the path if incorrect\n            history.replace({ path, state });\n          } catch (e) {\n            // The navigation was interrupted\n          }\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  }, [enabled, history, ref]);\n\n  return {\n    getInitialState,\n  };\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AASA,IAAAC,cAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,KAAA,GAAAC,uBAAA,CAAAJ,OAAA;AAEA,IAAAK,oBAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,cAAA,GAAAJ,sBAAA,CAAAF,OAAA;AAA2C,SAAAI,wBAAAG,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAL,uBAAA,YAAAA,wBAAAG,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAS3C,IAAMmB,kBAAiB,GAAG,SAApBA,iBAAiBA,CACrBC,CAAgB,EAChBC,CAAgB,EACmB;EACnC,IAAID,CAAC,KAAKE,SAAS,IAAID,CAAC,KAAKC,SAAS,IAAIF,CAAC,CAACG,GAAG,KAAKF,CAAC,CAACE,GAAG,EAAE;IACzD,OAAO,CAACD,SAAS,EAAEA,SAAS,CAAC;EAC/B;EAGA,IAAME,cAAc,GAAGJ,CAAC,CAACK,OAAO,GAAGL,CAAC,CAACK,OAAO,CAACC,MAAM,GAAGN,CAAC,CAACO,MAAM,CAACD,MAAM;EACrE,IAAME,cAAc,GAAGP,CAAC,CAACI,OAAO,GAAGJ,CAAC,CAACI,OAAO,CAACC,MAAM,GAAGL,CAAC,CAACM,MAAM,CAACD,MAAM;EAErE,IAAMG,MAAM,GAAGT,CAAC,CAACO,MAAM,CAACP,CAAC,CAACU,KAAK,CAAC;EAChC,IAAMC,MAAM,GAAGV,CAAC,CAACM,MAAM,CAACN,CAAC,CAACS,KAAK,CAAC;EAEhC,IAAME,WAAW,GAAGH,MAAM,CAACI,KAAsB;EACjD,IAAMC,WAAW,GAAGH,MAAM,CAACE,KAAsB;EAOjD,IACET,cAAc,KAAKI,cAAc,IACjCC,MAAM,CAACN,GAAG,KAAKQ,MAAM,CAACR,GAAG,IACzBS,WAAW,KAAKV,SAAS,IACzBY,WAAW,KAAKZ,SAAS,IACzBU,WAAW,CAACT,GAAG,KAAKW,WAAW,CAACX,GAAG,EACnC;IACA,OAAO,CAACH,CAAC,EAAEC,CAAC,CAAC;EACf;EAEA,OAAOF,kBAAiB,CAACa,WAAW,EAAEE,WAAW,CAAC;AACpD,CAAC;AAKM,IAAMC,MAAM,GAAAC,OAAA,CAAAD,MAAA,GAAI,SAAVA,MAAMA,CAAIE,EAAuB,EAAK;EACjD,IAAIC,KAAK,GAAGC,OAAO,CAACC,OAAO,EAAE;EAC7B,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrBH,KAAK,GAAGA,KAAK,CAACI,IAAI,CAACL,EAAE,CAAC;EACxB,CAAC;EACD,OAAOI,QAAQ;AACjB,CAAC;AAED,IAAIE,eAAyB,GAAG,EAAE;AAMnB,SAASC,UAAUA,CAChCC,GAA2D,EAAAC,IAAA,EAS3D;EAAA,IAPEC,WAAW,GAMHD,IAAA,CANRC,WAAW;IAAAC,YAAA,GAMHF,IAAA,CALRG,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,IAAI,GAAAA,YAAA;IACdE,MAAM,GAIEJ,IAAA,CAJRI,MAAM;IAAAC,qBAAA,GAIEL,IAAA,CAHRM,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAGE,sBAAuB,GAAAF,qBAAA;IAAAG,qBAAA,GAGlCR,IAAA,CAFRS,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAGE,sBAAuB,GAAAF,qBAAA;IAAAG,qBAAA,GAElCX,IAAA,CADRY,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAGE,wBAAA,GAAAF,qBAAA;EAGvB9D,KAAK,CAACiE,SAAS,CAAC,YAAM;IACpB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,OAAOzC,SAAS;IAClB;IAEA,IAAIyB,WAAW,EAAE;MACf,OAAOzB,SAAS;IAClB;IAEA,IAAI2B,OAAO,KAAK,KAAK,IAAIN,eAAe,CAACjB,MAAM,EAAE;MAC/CsC,OAAO,CAACC,KAAK,CACX,CACE,6KAA6K,EAC7K,uFAAuF,EACvF,4DAA4D,CAC7D,CACEC,IAAI,CAAC,IAAI,CAAC,CACVC,IAAI,EAAE,CACV;IACH;IAEA,IAAMC,OAAO,GAAGC,MAAM,EAAE;IAExB,IAAIpB,OAAO,KAAK,KAAK,EAAE;MACrBN,eAAe,CAAC2B,IAAI,CAACF,OAAO,CAAC;IAC/B;IAEA,OAAO,YAAM;MACX,IAAMtC,KAAK,GAAGa,eAAe,CAAC4B,OAAO,CAACH,OAAO,CAAC;MAE9C,IAAItC,KAAK,GAAG,CAAC,CAAC,EAAE;QACda,eAAe,CAAC6B,MAAM,CAAC1C,KAAK,EAAE,CAAC,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACmB,OAAO,EAAEF,WAAW,CAAC,CAAC;EAE1B,IAAA0B,eAAA,GAAkB9E,KAAK,CAAC+E,QAAQ,CAACC,4BAAmB,CAAC;IAAAC,gBAAA,OAAAC,eAAA,CAAApE,OAAA,EAAAgE,eAAA;IAA9ChD,OAAO,GAAAmD,gBAAA;EAKd,IAAME,UAAU,GAAGnF,KAAK,CAACoF,MAAM,CAAC9B,OAAO,CAAC;EACxC,IAAM+B,SAAS,GAAGrF,KAAK,CAACoF,MAAM,CAAC7B,MAAM,CAAC;EACtC,IAAM+B,mBAAmB,GAAGtF,KAAK,CAACoF,MAAM,CAAC3B,gBAAgB,CAAC;EAC1D,IAAM8B,mBAAmB,GAAGvF,KAAK,CAACoF,MAAM,CAACxB,gBAAgB,CAAC;EAC1D,IAAM4B,qBAAqB,GAAGxF,KAAK,CAACoF,MAAM,CAACrB,kBAAkB,CAAC;EAE9D/D,KAAK,CAACiE,SAAS,CAAC,YAAM;IACpBkB,UAAU,CAACM,OAAO,GAAGnC,OAAO;IAC5B+B,SAAS,CAACI,OAAO,GAAGlC,MAAM;IAC1B+B,mBAAmB,CAACG,OAAO,GAAGhC,gBAAgB;IAC9C8B,mBAAmB,CAACE,OAAO,GAAG7B,gBAAgB;IAC9C4B,qBAAqB,CAACC,OAAO,GAAG1B,kBAAkB;EACpD,CAAC,CAAC;EAEF,IAAM2B,MAAM,GAAG1F,KAAK,CAAC2F,UAAU,CAACC,sBAAa,CAAC;EAE9C,IAAMC,eAAe,GAAG7F,KAAK,CAAC8F,WAAW,CAAC,YAAM;IAC9C,IAAIC,KAA8B;IAElC,IAAIZ,UAAU,CAACM,OAAO,EAAE;MAAA,IAAAO,KAAA;MACtB,IAAMC,QAAQ,IAAAD,KAAA,GACZN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,QAAQ,YAAAD,KAAA,GACf,OAAOE,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACD,QAAQ,GAAGtE,SAAU;MAE/D,IAAMwE,IAAI,GAAGF,QAAQ,GAAGA,QAAQ,CAACG,QAAQ,GAAGH,QAAQ,CAACI,MAAM,GAAG1E,SAAS;MAEvE,IAAIwE,IAAI,EAAE;QACRJ,KAAK,GAAGT,mBAAmB,CAACG,OAAO,CAACU,IAAI,EAAEd,SAAS,CAACI,OAAO,CAAC;MAC9D;IACF;IAEA,IAAMa,QAAQ,GAAG;MACfvD,IAAI,WAAJA,IAAIA,CAACwD,WAAsD,EAAE;QAC3D,OAAO3D,OAAO,CAACC,OAAO,CAAC0D,WAAW,GAAGA,WAAW,CAACR,KAAK,CAAC,GAAGA,KAAK,CAAC;MAClE,CAAC;MACDS,KAAK,WAALA,MAAKA,CAAA,EAAG;QACN,OAAOF,QAAQ;MACjB;IACF,CAAC;IAED,OAAOA,QAAQ;EAEjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,gBAAgB,GAAGzG,KAAK,CAACoF,MAAM,CAAqBzD,SAAS,CAAC;EACpE,IAAM+E,gBAAgB,GAAG1G,KAAK,CAACoF,MAAM,CAA8BzD,SAAS,CAAC;EAC7E,IAAMgF,sBAAsB,GAAG3G,KAAK,CAACoF,MAAM,CAAqBzD,SAAS,CAAC;EAE1E3B,KAAK,CAACiE,SAAS,CAAC,YAAM;IACpBwC,gBAAgB,CAAChB,OAAO,GAAG3D,OAAO,CAACK,KAAK;IAExC,OAAOL,OAAO,CAAC8E,MAAM,CAAC,YAAM;MAAA,IAAAC,qBAAA;MAC1B,IAAMC,UAAU,GAAG5D,GAAG,CAACuC,OAAO;MAE9B,IAAI,CAACqB,UAAU,IAAI,CAACxD,OAAO,EAAE;QAC3B;MACF;MAEA,IAAAyD,OAAA,GAAqBb,MAAM;QAAnBD,QAAA,GAAAc,OAAA,CAAAd,QAAA;MAER,IAAME,IAAI,GAAGF,QAAQ,CAACG,QAAQ,GAAGH,QAAQ,CAACI,MAAM;MAChD,IAAMlE,KAAK,GAAGL,OAAO,CAACK,KAAK;MAE3B,IAAM6E,aAAa,IAAAH,qBAAA,GAAGJ,gBAAgB,CAAChB,OAAO,YAAAoB,qBAAA,GAAI,CAAC;MAEnDJ,gBAAgB,CAAChB,OAAO,GAAGtD,KAAK;MAChCwE,sBAAsB,CAAClB,OAAO,GAAGU,IAAI;MAKrC,IAAMc,MAAM,GAAGnF,OAAO,CAACd,GAAG,CAACmB,KAAK,CAAC;MAEjC,IAAI,CAAA8E,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEd,IAAI,MAAKA,IAAI,IAAIc,MAAM,aAANA,MAAM,eAANA,MAAM,CAAE3E,KAAK,EAAE;QAC1CwE,UAAU,CAACI,SAAS,CAACD,MAAM,CAAC3E,KAAK,CAAC;QAClC;MACF;MAEA,IAAMA,KAAK,GAAGgD,mBAAmB,CAACG,OAAO,CAACU,IAAI,EAAEd,SAAS,CAACI,OAAO,CAAC;MAIlE,IAAInD,KAAK,EAAE;QAGT,IAAM6E,SAAS,GAAGL,UAAU,CAACM,YAAY,EAAE;QAE3C,IAAI9E,KAAK,CAACN,MAAM,CAACqF,IAAI,CAAE,UAAA9G,CAAC;UAAA,OAAK,EAAC4G,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEG,UAAU,CAACC,QAAQ,CAAChH,CAAC,CAACiH,IAAI,CAAC;QAAA,EAAC,EAAE;UACrEnD,OAAO,CAACoD,IAAI,CACV,0SAA0S,CAC3S;UACD;QACF;QAEA,IAAItF,KAAK,GAAG6E,aAAa,EAAE;UACzB,IAAMU,MAAM,GAAGlC,qBAAqB,CAACC,OAAO,CAC1CnD,KAAK,EACL+C,SAAS,CAACI,OAAO,CAClB;UAED,IAAIiC,MAAM,KAAK/F,SAAS,EAAE;YACxB,IAAI;cACFmF,UAAU,CAACa,QAAQ,CAACD,MAAM,CAAC;YAC7B,CAAC,CAAC,OAAOtH,CAAC,EAAE;cAGViE,OAAO,CAACoD,IAAI,CACT,qDAAoDtB,IAAK,MACxD,OAAO/F,CAAC,KAAK,QAAQ,IAAIA,CAAC,IAAI,IAAI,IAAI,SAAS,IAAIA,CAAC,GAChDA,CAAC,CAACwH,OAAO,GACTxH,CACL,EAAC,CACH;YACH;UACF,CAAC,MAAM;YACL0G,UAAU,CAACI,SAAS,CAAC5E,KAAK,CAAC;UAC7B;QACF,CAAC,MAAM;UACLwE,UAAU,CAACI,SAAS,CAAC5E,KAAK,CAAC;QAC7B;MACF,CAAC,MAAM;QAELwE,UAAU,CAACI,SAAS,CAAC5E,KAAK,CAAC;MAC7B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACgB,OAAO,EAAExB,OAAO,EAAEoB,GAAG,CAAC,CAAC;EAE3BlD,KAAK,CAACiE,SAAS,CAAC,YAAM;IAAA,IAAA4D,YAAA;IACpB,IAAI,CAACvE,OAAO,EAAE;MACZ;IACF;IAEA,IAAMwE,eAAe,GAAG,SAAlBA,eAAeA,CACnBC,KAA0C,EAC1CzF,KAAsB,EACX;MAGX,IAAIyF,KAAK,aAALA,KAAK,eAALA,KAAK,CAAE5B,IAAI,EAAE;QACf,IAAM6B,YAAY,GAAG1C,mBAAmB,CAACG,OAAO,CAC9CsC,KAAK,CAAC5B,IAAI,EACVd,SAAS,CAACI,OAAO,CAClB;QAED,IAAIuC,YAAY,EAAE;UAChB,IAAMC,YAAY,GAAG,IAAAC,sBAAgB,EAACF,YAAY,CAAC;UAEnD,IACEC,YAAY,IACZA,YAAY,CAACT,IAAI,KAAKO,KAAK,CAACP,IAAI,IAChC,IAAAW,sBAAO,EAACF,YAAY,CAACG,MAAM,EAAEL,KAAK,CAACK,MAAM,CAAC,EAC1C;YACA,OAAOL,KAAK,CAAC5B,IAAI;UACnB;QACF;MACF;MAEA,OAAOZ,mBAAmB,CAACE,OAAO,CAACnD,KAAK,EAAE+C,SAAS,CAACI,OAAO,CAAC;IAC9D,CAAC;IAED,IAAIvC,GAAG,CAACuC,OAAO,EAAE;MAGf,IAAMnD,KAAK,GAAGY,GAAG,CAACuC,OAAO,CAAC2B,YAAY,EAAE;MAExC,IAAI9E,KAAK,EAAE;QACT,IAAMyF,KAAK,GAAG,IAAAG,sBAAgB,EAAC5F,KAAK,CAAC;QACrC,IAAM6D,IAAI,GAAG2B,eAAe,CAACC,KAAK,EAAEzF,KAAK,CAAC;QAE1C,IAAIoE,gBAAgB,CAACjB,OAAO,KAAK9D,SAAS,EAAE;UAC1C+E,gBAAgB,CAACjB,OAAO,GAAGnD,KAAK;QAClC;QAEAR,OAAO,CAACuG,OAAO,CAAC;UAAElC,IAAI,EAAJA,IAAI;UAAE7D,KAAA,EAAAA;QAAM,CAAC,CAAC;MAClC;IACF;IAEA,IAAMgG,aAAa;MAAA,IAAAC,KAAA,OAAAC,kBAAA,CAAA1H,OAAA,EAAG,aAAY;QAChC,IAAMgG,UAAU,GAAG5D,GAAG,CAACuC,OAAO;QAE9B,IAAI,CAACqB,UAAU,IAAI,CAACxD,OAAO,EAAE;UAC3B;QACF;QAEA,IAAMmF,aAAa,GAAG/B,gBAAgB,CAACjB,OAAO;QAC9C,IAAMnD,KAAK,GAAGwE,UAAU,CAACM,YAAY,EAAE;QAGvC,IAAI,CAAC9E,KAAK,EAAE;UACV;QACF;QAEA,IAAMoG,WAAW,GAAG/B,sBAAsB,CAAClB,OAAO;QAClD,IAAMsC,KAAK,GAAG,IAAAG,sBAAgB,EAAC5F,KAAK,CAAC;QACrC,IAAM6D,IAAI,GAAG2B,eAAe,CAACC,KAAK,EAAEzF,KAAK,CAAC;QAE1CoE,gBAAgB,CAACjB,OAAO,GAAGnD,KAAK;QAChCqE,sBAAsB,CAAClB,OAAO,GAAG9D,SAAS;QAM1C,IAAAgH,mBAAA,GAA6CnH,kBAAiB,CAC5DiH,aAAa,EACbnG,KAAK,CACN;UAAAsG,mBAAA,OAAA1D,eAAA,CAAApE,OAAA,EAAA6H,mBAAA;UAHME,oBAAoB,GAAAD,mBAAA;UAAEE,YAAY,GAAAF,mBAAA;QAKzC,IACEC,oBAAoB,IACpBC,YAAY,IAGZ3C,IAAI,KAAKuC,WAAW,EACpB;UACA,IAAMK,YAAY,GAChB,CAACD,YAAY,CAAChH,OAAO,GACjBgH,YAAY,CAAChH,OAAO,CAACC,MAAM,GAC3B+G,YAAY,CAAC9G,MAAM,CAACD,MAAM,KAC7B8G,oBAAoB,CAAC/G,OAAO,GACzB+G,oBAAoB,CAAC/G,OAAO,CAACC,MAAM,GACnC8G,oBAAoB,CAAC7G,MAAM,CAACD,MAAM,CAAC;UAEzC,IAAIgH,YAAY,GAAG,CAAC,EAAE;YAGpBjH,OAAO,CAAC6C,IAAI,CAAC;cAAEwB,IAAI,EAAJA,IAAI;cAAE7D,KAAA,EAAAA;YAAM,CAAC,CAAC;UAC/B,CAAC,MAAM,IAAIyG,YAAY,GAAG,CAAC,EAAE;YAG3B,IAAMC,SAAS,GAAGlH,OAAO,CAACmH,SAAS,CAAC;cAAE9C,IAAA,EAAAA;YAAK,CAAC,CAAC;YAC7C,IAAM+C,YAAY,GAAGpH,OAAO,CAACK,KAAK;YAElC,IAAI;cACF,IACE6G,SAAS,KAAK,CAAC,CAAC,IAChBA,SAAS,GAAGE,YAAY,IAExBpH,OAAO,CAACd,GAAG,CAACgI,SAAS,GAAGE,YAAY,CAAC,EACrC;gBAEA,MAAMpH,OAAO,CAACqH,EAAE,CAACH,SAAS,GAAGE,YAAY,CAAC;cAC5C,CAAC,MAAM;gBAIL,MAAMpH,OAAO,CAACqH,EAAE,CAACJ,YAAY,CAAC;cAChC;cAGAjH,OAAO,CAACuG,OAAO,CAAC;gBAAElC,IAAI,EAAJA,IAAI;gBAAE7D,KAAA,EAAAA;cAAM,CAAC,CAAC;YAClC,CAAC,CAAC,OAAOlC,CAAC,EAAE,CACV;UAEJ,CAAC,MAAM;YAEL0B,OAAO,CAACuG,OAAO,CAAC;cAAElC,IAAI,EAAJA,IAAI;cAAE7D,KAAA,EAAAA;YAAM,CAAC,CAAC;UAClC;QACF,CAAC,MAAM;UAGLR,OAAO,CAACuG,OAAO,CAAC;YAAElC,IAAI,EAAJA,IAAI;YAAE7D,KAAA,EAAAA;UAAM,CAAC,CAAC;QAClC;MACF,CAAC;MAAA,gBAtFKgG,aAAaA,CAAA;QAAA,OAAAC,KAAA,CAAAa,KAAA,OAAAC,SAAA;MAAA;IAAA,GAsFlB;IAKD,QAAAxB,YAAA,GAAO3E,GAAG,CAACuC,OAAO,cAAAoC,YAAA,uBAAXA,YAAA,CAAayB,WAAW,CAAC,OAAO,EAAE9G,MAAM,CAAC8F,aAAa,CAAC,CAAC;EACjE,CAAC,EAAE,CAAChF,OAAO,EAAExB,OAAO,EAAEoB,GAAG,CAAC,CAAC;EAE3B,OAAO;IACL2C,eAAA,EAAAA;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}