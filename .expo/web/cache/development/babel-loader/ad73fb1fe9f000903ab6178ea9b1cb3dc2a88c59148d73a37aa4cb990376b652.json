{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useKeyboardManager;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction useKeyboardManager(isEnabled) {\n  var previouslyFocusedTextInputRef = React.useRef(undefined);\n  var startTimestampRef = React.useRef(0);\n  var keyboardTimeoutRef = React.useRef();\n  var clearKeyboardTimeout = React.useCallback(function () {\n    if (keyboardTimeoutRef.current !== undefined) {\n      clearTimeout(keyboardTimeoutRef.current);\n      keyboardTimeoutRef.current = undefined;\n    }\n  }, []);\n  var onPageChangeStart = React.useCallback(function () {\n    if (!isEnabled()) {\n      return;\n    }\n    clearKeyboardTimeout();\n    var input = _reactNative.TextInput.State.currentlyFocusedInput();\n    input === null || input === void 0 ? void 0 : input.blur();\n    previouslyFocusedTextInputRef.current = input;\n    startTimestampRef.current = Date.now();\n  }, [clearKeyboardTimeout, isEnabled]);\n  var onPageChangeConfirm = React.useCallback(function (force) {\n    if (!isEnabled()) {\n      return;\n    }\n    clearKeyboardTimeout();\n    if (force) {\n      _reactNative.Keyboard.dismiss();\n    } else {\n      var input = previouslyFocusedTextInputRef.current;\n      input === null || input === void 0 ? void 0 : input.blur();\n    }\n    previouslyFocusedTextInputRef.current = undefined;\n  }, [clearKeyboardTimeout, isEnabled]);\n  var onPageChangeCancel = React.useCallback(function () {\n    if (!isEnabled()) {\n      return;\n    }\n    clearKeyboardTimeout();\n    var input = previouslyFocusedTextInputRef.current;\n    if (input) {\n      if (Date.now() - startTimestampRef.current < 100) {\n        keyboardTimeoutRef.current = setTimeout(function () {\n          input === null || input === void 0 ? void 0 : input.focus();\n          previouslyFocusedTextInputRef.current = undefined;\n        }, 100);\n      } else {\n        input === null || input === void 0 ? void 0 : input.focus();\n        previouslyFocusedTextInputRef.current = undefined;\n      }\n    }\n  }, [clearKeyboardTimeout, isEnabled]);\n  React.useEffect(function () {\n    return function () {\n      return clearKeyboardTimeout();\n    };\n  }, [clearKeyboardTimeout]);\n  return {\n    onPageChangeStart: onPageChangeStart,\n    onPageChangeConfirm: onPageChangeConfirm,\n    onPageChangeCancel: onPageChangeCancel\n  };\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useKeyboardManager","isEnabled","previouslyFocusedTextInputRef","useRef","undefined","startTimestampRef","keyboardTimeoutRef","clearKeyboardTimeout","useCallback","current","clearTimeout","onPageChangeStart","input","TextInput","State","currentlyFocusedInput","blur","Date","now","onPageChangeConfirm","force","Keyboard","dismiss","onPageChangeCancel","setTimeout","focus","useEffect"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/node_modules/@react-navigation/stack/src/utils/useKeyboardManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HostComponent, Keyboard, TextInput } from 'react-native';\n\ntype InputRef = React.ElementRef<HostComponent<unknown>> | undefined;\n\nexport default function useKeyboardManager(isEnabled: () => boolean) {\n  // Numeric id of the previously focused text input\n  // When a gesture didn't change the tab, we can restore the focused input with this\n  const previouslyFocusedTextInputRef = React.useRef<InputRef>(undefined);\n  const startTimestampRef = React.useRef<number>(0);\n  const keyboardTimeoutRef = React.useRef<any>();\n\n  const clearKeyboardTimeout = React.useCallback(() => {\n    if (keyboardTimeoutRef.current !== undefined) {\n      clearTimeout(keyboardTimeoutRef.current);\n      keyboardTimeoutRef.current = undefined;\n    }\n  }, []);\n\n  const onPageChangeStart = React.useCallback(() => {\n    if (!isEnabled()) {\n      return;\n    }\n\n    clearKeyboardTimeout();\n\n    const input: InputRef = TextInput.State.currentlyFocusedInput();\n\n    // When a page change begins, blur the currently focused input\n    input?.blur();\n\n    // Store the id of this input so we can refocus it if change was cancelled\n    previouslyFocusedTextInputRef.current = input;\n\n    // Store timestamp for touch start\n    startTimestampRef.current = Date.now();\n  }, [clearKeyboardTimeout, isEnabled]);\n\n  const onPageChangeConfirm = React.useCallback(\n    (force: boolean) => {\n      if (!isEnabled()) {\n        return;\n      }\n\n      clearKeyboardTimeout();\n\n      if (force) {\n        // Always dismiss input, even if we don't have a ref to it\n        // We might not have the ref if onPageChangeStart was never called\n        // This can happen if page change was not from a gesture\n        Keyboard.dismiss();\n      } else {\n        const input = previouslyFocusedTextInputRef.current;\n\n        // Dismiss the keyboard only if an input was a focused before\n        // This makes sure we don't dismiss input on going back and focusing an input\n        input?.blur();\n      }\n\n      // Cleanup the ID on successful page change\n      previouslyFocusedTextInputRef.current = undefined;\n    },\n    [clearKeyboardTimeout, isEnabled]\n  );\n\n  const onPageChangeCancel = React.useCallback(() => {\n    if (!isEnabled()) {\n      return;\n    }\n\n    clearKeyboardTimeout();\n\n    // The page didn't change, we should restore the focus of text input\n    const input = previouslyFocusedTextInputRef.current;\n\n    if (input) {\n      // If the interaction was super short we should make sure keyboard won't hide again.\n\n      // Too fast input refocus will result only in keyboard flashing on screen and hiding right away.\n      // During first ~100ms keyboard will be dismissed no matter what,\n      // so we have to make sure it won't interrupt input refocus logic.\n      // That's why when the interaction is shorter than 100ms we add delay so it won't hide once again.\n      // Subtracting timestamps makes us sure the delay is executed only when needed.\n      if (Date.now() - startTimestampRef.current < 100) {\n        keyboardTimeoutRef.current = setTimeout(() => {\n          input?.focus();\n          previouslyFocusedTextInputRef.current = undefined;\n        }, 100);\n      } else {\n        input?.focus();\n        previouslyFocusedTextInputRef.current = undefined;\n      }\n    }\n  }, [clearKeyboardTimeout, isEnabled]);\n\n  React.useEffect(() => {\n    return () => clearKeyboardTimeout();\n  }, [clearKeyboardTimeout]);\n\n  return {\n    onPageChangeStart,\n    onPageChangeConfirm,\n    onPageChangeCancel,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}