{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDateNavigation = exports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _DateNavigationService = require(\"../services/DateNavigationService\");\nvar useDateNavigation = exports.useDateNavigation = function useDateNavigation() {\n  var _useState = (0, _react.useState)(_DateNavigationService.dateNavigationService.getCurrentDate()),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    currentDate = _useState2[0],\n    setCurrentDate = _useState2[1];\n  (0, _react.useEffect)(function () {\n    _DateNavigationService.dateNavigationService.initialize();\n    var unsubscribe = _DateNavigationService.dateNavigationService.addDateChangeListener(function (date) {\n      setCurrentDate(date);\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n  var navigateToDate = (0, _react.useCallback)(function (date) {\n    _DateNavigationService.dateNavigationService.setCurrentDate(date);\n  }, []);\n  var goToNextDay = (0, _react.useCallback)(function () {\n    _DateNavigationService.dateNavigationService.goToNextDay();\n  }, []);\n  var goToPreviousDay = (0, _react.useCallback)(function () {\n    _DateNavigationService.dateNavigationService.goToPreviousDay();\n  }, []);\n  var goToToday = (0, _react.useCallback)(function () {\n    _DateNavigationService.dateNavigationService.goToToday();\n  }, []);\n  var getFormattedDate = (0, _react.useCallback)(function (formatString) {\n    return _DateNavigationService.dateNavigationService.getFormattedDate(formatString);\n  }, [currentDate]);\n  var getRelativeDateDescription = (0, _react.useCallback)(function () {\n    return _DateNavigationService.dateNavigationService.getRelativeDateDescription();\n  }, [currentDate]);\n  var getWeekRange = (0, _react.useCallback)(function () {\n    return _DateNavigationService.dateNavigationService.getWeekRange();\n  }, [currentDate]);\n  var getMonthRange = (0, _react.useCallback)(function () {\n    return _DateNavigationService.dateNavigationService.getMonthRange();\n  }, [currentDate]);\n  var getDateRange = (0, _react.useCallback)(function (startDate, endDate) {\n    return _DateNavigationService.dateNavigationService.getDateRange(startDate, endDate);\n  }, []);\n  var isDateInRange = (0, _react.useCallback)(function (date, startDate, endDate) {\n    return _DateNavigationService.dateNavigationService.isDateInRange(date, startDate, endDate);\n  }, []);\n  return {\n    currentDate: currentDate,\n    navigateToDate: navigateToDate,\n    goToNextDay: goToNextDay,\n    goToPreviousDay: goToPreviousDay,\n    goToToday: goToToday,\n    getFormattedDate: getFormattedDate,\n    getRelativeDateDescription: getRelativeDateDescription,\n    getWeekRange: getWeekRange,\n    getMonthRange: getMonthRange,\n    getDateRange: getDateRange,\n    isDateInRange: isDateInRange,\n    isToday: _DateNavigationService.dateNavigationService.isToday(),\n    isPastDate: _DateNavigationService.dateNavigationService.isPastDate(),\n    isFutureDate: _DateNavigationService.dateNavigationService.isFutureDate()\n  };\n};\nvar _default = exports.default = useDateNavigation;","map":{"version":3,"names":["_react","require","_DateNavigationService","useDateNavigation","exports","_useState","useState","dateNavigationService","getCurrentDate","_useState2","_slicedToArray2","default","currentDate","setCurrentDate","useEffect","initialize","unsubscribe","addDateChangeListener","date","navigateToDate","useCallback","goToNextDay","goToPreviousDay","goToToday","getFormattedDate","formatString","getRelativeDateDescription","getWeekRange","getMonthRange","getDateRange","startDate","endDate","isDateInRange","isToday","isPastDate","isFutureDate","_default"],"sources":["/Users/vaishnavkrishnan/Documents/projects/pd_app/src/hooks/useDateNavigation.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { dateNavigationService } from '../services/DateNavigationService';\n\n/**\n * Hook for managing date navigation across the app\n */\nexport const useDateNavigation = () => {\n  const [currentDate, setCurrentDate] = useState<Date>(dateNavigationService.getCurrentDate());\n\n  useEffect(() => {\n    // Initialize the service\n    dateNavigationService.initialize();\n\n    // Subscribe to date changes\n    const unsubscribe = dateNavigationService.addDateChangeListener((date) => {\n      setCurrentDate(date);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const navigateToDate = useCallback((date: Date) => {\n    dateNavigationService.setCurrentDate(date);\n  }, []);\n\n  const goToNextDay = useCallback(() => {\n    dateNavigationService.goToNextDay();\n  }, []);\n\n  const goToPreviousDay = useCallback(() => {\n    dateNavigationService.goToPreviousDay();\n  }, []);\n\n  const goToToday = useCallback(() => {\n    dateNavigationService.goToToday();\n  }, []);\n\n  const getFormattedDate = useCallback((formatString?: string) => {\n    return dateNavigationService.getFormattedDate(formatString);\n  }, [currentDate]);\n\n  const getRelativeDateDescription = useCallback(() => {\n    return dateNavigationService.getRelativeDateDescription();\n  }, [currentDate]);\n\n  const getWeekRange = useCallback(() => {\n    return dateNavigationService.getWeekRange();\n  }, [currentDate]);\n\n  const getMonthRange = useCallback(() => {\n    return dateNavigationService.getMonthRange();\n  }, [currentDate]);\n\n  const getDateRange = useCallback((startDate: Date, endDate: Date) => {\n    return dateNavigationService.getDateRange(startDate, endDate);\n  }, []);\n\n  const isDateInRange = useCallback((date: Date, startDate: Date, endDate: Date) => {\n    return dateNavigationService.isDateInRange(date, startDate, endDate);\n  }, []);\n\n  return {\n    currentDate,\n    navigateToDate,\n    goToNextDay,\n    goToPreviousDay,\n    goToToday,\n    getFormattedDate,\n    getRelativeDateDescription,\n    getWeekRange,\n    getMonthRange,\n    getDateRange,\n    isDateInRange,\n    isToday: dateNavigationService.isToday(),\n    isPastDate: dateNavigationService.isPastDate(),\n    isFutureDate: dateNavigationService.isFutureDate(),\n  };\n};\n\nexport default useDateNavigation;"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,sBAAA,GAAAD,OAAA;AAKO,IAAME,iBAAiB,GAAAC,OAAA,CAAAD,iBAAA,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EACrC,IAAAE,SAAA,GAAsC,IAAAC,eAAQ,EAAOC,4CAAqB,CAACC,cAAc,CAAC,CAAC,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAN,SAAA;IAArFO,WAAW,GAAAH,UAAA;IAAEI,cAAc,GAAAJ,UAAA;EAElC,IAAAK,gBAAS,EAAC,YAAM;IAEdP,4CAAqB,CAACQ,UAAU,CAAC,CAAC;IAGlC,IAAMC,WAAW,GAAGT,4CAAqB,CAACU,qBAAqB,CAAC,UAACC,IAAI,EAAK;MACxEL,cAAc,CAACK,IAAI,CAAC;IACtB,CAAC,CAAC;IAEF,OAAO,YAAM;MACXF,WAAW,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,cAAc,GAAG,IAAAC,kBAAW,EAAC,UAACF,IAAU,EAAK;IACjDX,4CAAqB,CAACM,cAAc,CAACK,IAAI,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,WAAW,GAAG,IAAAD,kBAAW,EAAC,YAAM;IACpCb,4CAAqB,CAACc,WAAW,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,eAAe,GAAG,IAAAF,kBAAW,EAAC,YAAM;IACxCb,4CAAqB,CAACe,eAAe,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,SAAS,GAAG,IAAAH,kBAAW,EAAC,YAAM;IAClCb,4CAAqB,CAACgB,SAAS,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,gBAAgB,GAAG,IAAAJ,kBAAW,EAAC,UAACK,YAAqB,EAAK;IAC9D,OAAOlB,4CAAqB,CAACiB,gBAAgB,CAACC,YAAY,CAAC;EAC7D,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC;EAEjB,IAAMc,0BAA0B,GAAG,IAAAN,kBAAW,EAAC,YAAM;IACnD,OAAOb,4CAAqB,CAACmB,0BAA0B,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACd,WAAW,CAAC,CAAC;EAEjB,IAAMe,YAAY,GAAG,IAAAP,kBAAW,EAAC,YAAM;IACrC,OAAOb,4CAAqB,CAACoB,YAAY,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACf,WAAW,CAAC,CAAC;EAEjB,IAAMgB,aAAa,GAAG,IAAAR,kBAAW,EAAC,YAAM;IACtC,OAAOb,4CAAqB,CAACqB,aAAa,CAAC,CAAC;EAC9C,CAAC,EAAE,CAAChB,WAAW,CAAC,CAAC;EAEjB,IAAMiB,YAAY,GAAG,IAAAT,kBAAW,EAAC,UAACU,SAAe,EAAEC,OAAa,EAAK;IACnE,OAAOxB,4CAAqB,CAACsB,YAAY,CAACC,SAAS,EAAEC,OAAO,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,aAAa,GAAG,IAAAZ,kBAAW,EAAC,UAACF,IAAU,EAAEY,SAAe,EAAEC,OAAa,EAAK;IAChF,OAAOxB,4CAAqB,CAACyB,aAAa,CAACd,IAAI,EAAEY,SAAS,EAAEC,OAAO,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLnB,WAAW,EAAXA,WAAW;IACXO,cAAc,EAAdA,cAAc;IACdE,WAAW,EAAXA,WAAW;IACXC,eAAe,EAAfA,eAAe;IACfC,SAAS,EAATA,SAAS;IACTC,gBAAgB,EAAhBA,gBAAgB;IAChBE,0BAA0B,EAA1BA,0BAA0B;IAC1BC,YAAY,EAAZA,YAAY;IACZC,aAAa,EAAbA,aAAa;IACbC,YAAY,EAAZA,YAAY;IACZG,aAAa,EAAbA,aAAa;IACbC,OAAO,EAAE1B,4CAAqB,CAAC0B,OAAO,CAAC,CAAC;IACxCC,UAAU,EAAE3B,4CAAqB,CAAC2B,UAAU,CAAC,CAAC;IAC9CC,YAAY,EAAE5B,4CAAqB,CAAC4B,YAAY,CAAC;EACnD,CAAC;AACH,CAAC;AAAC,IAAAC,QAAA,GAAAhC,OAAA,CAAAO,OAAA,GAEaR,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}