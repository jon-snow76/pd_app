{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceTouchHandlerName = exports.forceTouchGestureHandlerProps = exports.ForceTouchGestureHandler = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _utils = require(\"../utils\");\nvar _PlatformConstants = _interopRequireDefault(require(\"../PlatformConstants\"));\nvar _createHandler = _interopRequireDefault(require(\"./createHandler\"));\nvar _gestureHandlerCommon = require(\"./gestureHandlerCommon\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar forceTouchGestureHandlerProps = exports.forceTouchGestureHandlerProps = ['minForce', 'maxForce', 'feedbackOnActivation'];\nvar ForceTouchFallback = function (_React$Component) {\n  function ForceTouchFallback() {\n    (0, _classCallCheck2.default)(this, ForceTouchFallback);\n    return _callSuper(this, ForceTouchFallback, arguments);\n  }\n  (0, _inherits2.default)(ForceTouchFallback, _React$Component);\n  return (0, _createClass2.default)(ForceTouchFallback, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.warn((0, _utils.tagMessage)('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n}(_react.default.Component);\n_defineProperty(ForceTouchFallback, \"forceTouchAvailable\", false);\nvar forceTouchHandlerName = exports.forceTouchHandlerName = 'ForceTouchGestureHandler';\nvar ForceTouchGestureHandler = exports.ForceTouchGestureHandler = _PlatformConstants.default !== null && _PlatformConstants.default !== void 0 && _PlatformConstants.default.forceTouchAvailable ? (0, _createHandler.default)({\n  name: forceTouchHandlerName,\n  allowedProps: [].concat((0, _toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps), forceTouchGestureHandlerProps),\n  config: {}\n}) : ForceTouchFallback;\nForceTouchGestureHandler.forceTouchAvailable = (_PlatformConstants.default === null || _PlatformConstants.default === void 0 ? void 0 : _PlatformConstants.default.forceTouchAvailable) || false;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_utils","_PlatformConstants","_createHandler","_gestureHandlerCommon","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","forceTouchGestureHandlerProps","exports","ForceTouchFallback","_React$Component","_classCallCheck2","arguments","_inherits2","_createClass2","key","value","componentDidMount","console","warn","tagMessage","render","props","children","React","Component","forceTouchHandlerName","ForceTouchGestureHandler","PlatformConstants","forceTouchAvailable","createHandler","name","allowedProps","concat","_toConsumableArray2","baseGestureHandlerProps","config"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/node_modules/react-native-gesture-handler/lib/module/handlers/ForceTouchGestureHandler.ts"],"sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport { tagMessage } from '../utils';\nimport PlatformConstants from '../PlatformConstants';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const forceTouchGestureHandlerProps = [\n  'minForce',\n  'maxForce',\n  'feedbackOnActivation',\n] as const;\n\n// implicit `children` prop has been removed in @types/react^18.0.0\nclass ForceTouchFallback extends React.Component<PropsWithChildren<unknown>> {\n  static forceTouchAvailable = false;\n  componentDidMount() {\n    console.warn(\n      tagMessage(\n        'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n      )\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport type ForceTouchGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n\n  /**\n   * The pressure of a touch.\n   */\n  force: number;\n};\n\nexport interface ForceTouchGestureConfig {\n  /**\n   *\n   * A minimal pressure that is required before handler can activate. Should be a\n   * value from range `[0.0, 1.0]`. Default is `0.2`.\n   */\n  minForce?: number;\n\n  /**\n   * A maximal pressure that could be applied for handler. If the pressure is\n   * greater, handler fails. Should be a value from range `[0.0, 1.0]`.\n   */\n  maxForce?: number;\n\n  /**\n   * Boolean value defining if haptic feedback has to be performed on\n   * activation.\n   */\n  feedbackOnActivation?: boolean;\n}\n\nexport interface ForceTouchGestureHandlerProps\n  extends BaseGestureHandlerProps<ForceTouchGestureHandlerEventPayload>,\n    ForceTouchGestureConfig {}\n\nexport type ForceTouchGestureHandler = typeof ForceTouchGestureHandler & {\n  forceTouchAvailable: boolean;\n};\n\nexport const forceTouchHandlerName = 'ForceTouchGestureHandler';\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const ForceTouchGestureHandler = PlatformConstants?.forceTouchAvailable\n  ? createHandler<\n      ForceTouchGestureHandlerProps,\n      ForceTouchGestureHandlerEventPayload\n    >({\n      name: forceTouchHandlerName,\n      allowedProps: [\n        ...baseGestureHandlerProps,\n        ...forceTouchGestureHandlerProps,\n      ] as const,\n      config: {},\n    })\n  : ForceTouchFallback;\n\n(ForceTouchGestureHandler as ForceTouchGestureHandler).forceTouchAvailable =\n  PlatformConstants?.forceTouchAvailable || false;\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,cAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,qBAAA,GAAAJ,OAAA;AAAA,SAAAK,WAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,WAAAD,CAAA,OAAAE,gBAAA,CAAAC,OAAA,EAAAH,CAAA,OAAAI,2BAAA,CAAAD,OAAA,EAAAJ,CAAA,EAAAM,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAP,CAAA,EAAAC,CAAA,YAAAC,gBAAA,CAAAC,OAAA,EAAAJ,CAAA,EAAAS,WAAA,IAAAR,CAAA,CAAAS,KAAA,CAAAV,CAAA,EAAAE,CAAA;AAAA,SAAAI,0BAAA,cAAAN,CAAA,IAAAW,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAP,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAX,CAAA,aAAAM,yBAAA,YAAAA,0BAAA,aAAAN,CAAA;;;;;;;;;;;;;;AAKO,IAAMe,6BAA6B,GAAAC,OAAA,CAAAD,6BAAA,GAAG,CAC3C,UAD2C,EAE3C,UAF2C,EAG3C,sBAH2C,CAAtC;IAODE,kBAAN,aAAAC,gBAAA;EAAA,SAAAD,mBAAA;IAAA,IAAAE,gBAAA,CAAAf,OAAA,QAAAa,kBAAA;IAAA,OAAAlB,UAAA,OAAAkB,kBAAA,EAAAG,SAAA;EAAA;EAAA,IAAAC,UAAA,CAAAjB,OAAA,EAAAa,kBAAA,EAAAC,gBAAA;EAAA,WAAAI,aAAA,CAAAlB,OAAA,EAAAa,kBAAA;IAAAM,GAAA;IAAAC,KAAA,EAEE,SAAAC,iBAAiBA,CAAA,EAAG;MAClBC,OAAO,CAACC,IAAR,CACE,IAAAC,iBAAU,EACR,8NADQ,CADZ;IAKD;EAAA;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAK,MAAMA,CAAA,EAAG;MACP,OAAO,KAAKC,KAAL,CAAWC,QAAlB;IACD;EAAA;AAAA,EAX8BC,cAAK,CAACC,SAAvC;gBAAMhB,kB,yBACyB,K;AAsDxB,IAAMiB,qBAAqB,GAAAlB,OAAA,CAAAkB,qBAAA,GAAG,0BAA9B;AAGA,IAAMC,wBAAwB,GAAAnB,OAAA,CAAAmB,wBAAA,GAAGC,0BAAiB,SAAjB,IAAAA,0BAAiB,WAAjB,IAAAA,0BAAiB,CAAEC,mBAAnB,GACpC,IAAAC,sBAAa,EAGX;EACAC,IAAI,EAAEL,qBADN;EAEAM,YAAY,KAAAC,MAAA,KAAAC,mBAAA,CAAAtC,OAAA,EACPuC,6CADS,GAET5B,6BAFS,CAFd;EAMA6B,MAAM,EAAE;AANR,CAHW,CADuB,GAYpC3B,kBAZG;AAcNkB,wBAAD,CAAuDE,mBAAvD,GACE,CAAAD,0BAAiB,SAAjB,IAAAA,0BAAiB,WAAjB,YAAAA,0BAAiB,CAAEC,mBAAnB,KAA0C,KAD5C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}