{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _helpers = require(\"../utils/helpers\");\nvar _taskUtils = require(\"../utils/taskUtils\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/vaishnavkrishnan/Desktop/pd_app/src/components/TaskItem.tsx\";\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar TaskItem = function TaskItem(_ref) {\n  var task = _ref.task,\n    onEdit = _ref.onEdit,\n    onDelete = _ref.onDelete,\n    onToggleCompletion = _ref.onToggleCompletion;\n  var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n    swipeX = _useState2[0];\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    isSwipeActive = _useState4[0],\n    setIsSwipeActive = _useState4[1];\n  var isOverdue = !task.isCompleted && (0, _helpers.isPastDate)(task.dueDate);\n  var isDueToday = (0, _helpers.isToday)(task.dueDate);\n  var isDueSoon = (0, _taskUtils.isTaskDueSoon)(task, 48);\n  var getPriorityColor = function getPriorityColor(priority) {\n    switch (priority) {\n      case 'high':\n        return '#dc3545';\n      case 'medium':\n        return '#ffc107';\n      case 'low':\n        return '#28a745';\n      default:\n        return '#6c757d';\n    }\n  };\n  var getPriorityBackgroundColor = function getPriorityBackgroundColor(priority) {\n    switch (priority) {\n      case 'high':\n        return '#fff5f5';\n      case 'medium':\n        return '#fffbf0';\n      case 'low':\n        return '#f0fff4';\n      default:\n        return '#f8f9fa';\n    }\n  };\n  var formatDueDate = function formatDueDate(date) {\n    if ((0, _helpers.isToday)(date)) {\n      return 'Today';\n    }\n    var now = new Date();\n    var tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    if ((0, _helpers.formatDateString)(date) === (0, _helpers.formatDateString)(tomorrow)) {\n      return 'Tomorrow';\n    }\n    return (0, _helpers.formatDateString)(date);\n  };\n  var handlePress = function handlePress() {\n    if (isSwipeActive) {\n      resetSwipe();\n      return;\n    }\n    onEdit(task);\n  };\n  var handleLongPress = function handleLongPress() {\n    _reactNative.Alert.alert(task.title, 'What would you like to do?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Edit',\n      onPress: function onPress() {\n        return onEdit(task);\n      }\n    }, {\n      text: task.isCompleted ? 'Mark Incomplete' : 'Mark Complete',\n      onPress: function onPress() {\n        return onToggleCompletion(task);\n      }\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: function onPress() {\n        return onDelete(task);\n      }\n    }]);\n  };\n  var handleTogglePress = function handleTogglePress() {\n    onToggleCompletion(task);\n  };\n  var onGestureEvent = _reactNative.Animated.event([{\n    nativeEvent: {\n      translationX: swipeX\n    }\n  }], {\n    useNativeDriver: false\n  });\n  var onHandlerStateChange = function onHandlerStateChange(event) {\n    if (event.nativeEvent.state === _reactNative.State.END) {\n      var translationX = event.nativeEvent.translationX;\n      if (Math.abs(translationX) > 100) {\n        if (translationX > 0) {\n          onToggleCompletion(task);\n        } else {\n          onDelete(task);\n        }\n        resetSwipe();\n      } else {\n        resetSwipe();\n      }\n    } else if (event.nativeEvent.state === _reactNative.State.ACTIVE) {\n      setIsSwipeActive(true);\n    }\n  };\n  var resetSwipe = function resetSwipe() {\n    _reactNative.Animated.spring(swipeX, {\n      toValue: 0,\n      useNativeDriver: false\n    }).start();\n    setIsSwipeActive(false);\n  };\n  var renderSwipeActions = function renderSwipeActions() {\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: styles.swipeActionsContainer,\n      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: styles.swipeActionLeft,\n        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: styles.swipeActionText,\n          children: task.isCompleted ? 'Incomplete' : 'Complete'\n        })\n      }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: styles.swipeActionRight,\n        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: styles.swipeActionText,\n          children: \"Delete\"\n        })\n      })]\n    });\n  };\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: styles.container,\n    children: [renderSwipeActions(), (0, _jsxRuntime.jsx)(_reactNative.PanGestureHandler, {\n      onGestureEvent: onGestureEvent,\n      onHandlerStateChange: onHandlerStateChange,\n      children: (0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {\n        style: [styles.taskContainer, {\n          backgroundColor: getPriorityBackgroundColor(task.priority),\n          transform: [{\n            translateX: swipeX\n          }]\n        }, task.isCompleted && styles.completedTask, isOverdue && styles.overdueTask],\n        children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: [styles.priorityIndicator, {\n            backgroundColor: getPriorityColor(task.priority)\n          }]\n        }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: handleTogglePress,\n          style: styles.toggleButton,\n          children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: [styles.checkbox, task.isCompleted && styles.checkedBox],\n            children: task.isCompleted && (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: styles.checkmark,\n              children: \"\\u2713\"\n            })\n          })\n        }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {\n          style: styles.content,\n          onPress: handlePress,\n          onLongPress: handleLongPress,\n          activeOpacity: 0.7,\n          children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: styles.header,\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: [styles.title, task.isCompleted && styles.completedTitle],\n              numberOfLines: 2,\n              children: task.title\n            }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              style: styles.badges,\n              children: [isOverdue && (0, _jsxRuntime.jsx)(_reactNative.View, {\n                style: styles.overdueBadge,\n                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: styles.overdueBadgeText,\n                  children: \"Overdue\"\n                })\n              }), isDueToday && !isOverdue && (0, _jsxRuntime.jsx)(_reactNative.View, {\n                style: styles.todayBadge,\n                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: styles.todayBadgeText,\n                  children: \"Today\"\n                })\n              }), isDueSoon && !isDueToday && !isOverdue && (0, _jsxRuntime.jsx)(_reactNative.View, {\n                style: styles.soonBadge,\n                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: styles.soonBadgeText,\n                  children: \"Soon\"\n                })\n              })]\n            })]\n          }), task.description && (0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: [styles.description, task.isCompleted && styles.completedText],\n            numberOfLines: 2,\n            children: task.description\n          }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: styles.footer,\n            children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n              style: styles.leftFooter,\n              children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {\n                style: [styles.dueDate, task.isCompleted && styles.completedText, isOverdue && styles.overdueText, isDueToday && styles.todayText],\n                children: [\"Due: \", formatDueDate(task.dueDate)]\n              }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                style: [styles.category, task.isCompleted && styles.completedText],\n                children: task.category\n              })]\n            }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              style: styles.rightFooter,\n              children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n                style: [styles.priorityBadge, {\n                  backgroundColor: getPriorityColor(task.priority)\n                }],\n                children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: styles.priorityText,\n                  children: task.priority.toUpperCase()\n                })\n              }), task.estimatedDuration && (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n                style: [styles.duration, task.isCompleted && styles.completedText],\n                children: [task.estimatedDuration, \"m\"]\n              })]\n            })]\n          }), task.completedAt && (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n            style: styles.completedAt,\n            children: [\"Completed: \", (0, _helpers.formatDateString)(task.completedAt)]\n          })]\n        })]\n      })\n    })]\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginHorizontal: 16,\n    marginVertical: 4,\n    position: 'relative'\n  },\n  swipeActionsContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    borderRadius: 12,\n    overflow: 'hidden'\n  },\n  swipeActionLeft: {\n    flex: 1,\n    backgroundColor: '#28a745',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  swipeActionRight: {\n    flex: 1,\n    backgroundColor: '#dc3545',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  swipeActionText: {\n    color: '#ffffff',\n    fontWeight: '600',\n    fontSize: 16\n  },\n  taskContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#ffffff',\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#e9ecef',\n    overflow: 'hidden',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  completedTask: {\n    opacity: 0.7\n  },\n  overdueTask: {\n    borderColor: '#dc3545',\n    borderWidth: 2\n  },\n  priorityIndicator: {\n    width: 4\n  },\n  toggleButton: {\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    borderWidth: 2,\n    borderColor: '#ced4da',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ffffff'\n  },\n  checkedBox: {\n    backgroundColor: '#28a745',\n    borderColor: '#28a745'\n  },\n  checkmark: {\n    color: '#ffffff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  content: {\n    flex: 1,\n    padding: 16,\n    paddingLeft: 0\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 8\n  },\n  title: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#212529',\n    marginRight: 8\n  },\n  completedTitle: {\n    textDecorationLine: 'line-through',\n    color: '#6c757d'\n  },\n  badges: {\n    flexDirection: 'row',\n    gap: 4\n  },\n  overdueBadge: {\n    backgroundColor: '#dc3545',\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4\n  },\n  overdueBadgeText: {\n    color: '#ffffff',\n    fontSize: 10,\n    fontWeight: '600'\n  },\n  todayBadge: {\n    backgroundColor: '#007bff',\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4\n  },\n  todayBadgeText: {\n    color: '#ffffff',\n    fontSize: 10,\n    fontWeight: '600'\n  },\n  soonBadge: {\n    backgroundColor: '#ffc107',\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4\n  },\n  soonBadgeText: {\n    color: '#212529',\n    fontSize: 10,\n    fontWeight: '600'\n  },\n  description: {\n    fontSize: 14,\n    color: '#6c757d',\n    lineHeight: 18,\n    marginBottom: 12\n  },\n  completedText: {\n    color: '#adb5bd'\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end'\n  },\n  leftFooter: {\n    flex: 1\n  },\n  rightFooter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8\n  },\n  dueDate: {\n    fontSize: 12,\n    color: '#495057',\n    fontWeight: '500',\n    marginBottom: 2\n  },\n  overdueText: {\n    color: '#dc3545',\n    fontWeight: '600'\n  },\n  todayText: {\n    color: '#007bff',\n    fontWeight: '600'\n  },\n  category: {\n    fontSize: 11,\n    color: '#6c757d',\n    textTransform: 'capitalize'\n  },\n  priorityBadge: {\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4\n  },\n  priorityText: {\n    color: '#ffffff',\n    fontSize: 10,\n    fontWeight: '600'\n  },\n  duration: {\n    fontSize: 11,\n    color: '#6c757d',\n    fontWeight: '500'\n  },\n  completedAt: {\n    fontSize: 11,\n    color: '#28a745',\n    fontStyle: 'italic',\n    marginTop: 8\n  }\n});\nvar _default = exports.default = TaskItem;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_helpers","_taskUtils","_jsxRuntime","_this","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","TaskItem","_ref","task","onEdit","onDelete","onToggleCompletion","_useState","useState","Animated","Value","_useState2","_slicedToArray2","swipeX","_useState3","_useState4","isSwipeActive","setIsSwipeActive","isOverdue","isCompleted","isPastDate","dueDate","isDueToday","isToday","isDueSoon","isTaskDueSoon","getPriorityColor","priority","getPriorityBackgroundColor","formatDueDate","date","now","Date","tomorrow","setDate","getDate","formatDateString","handlePress","resetSwipe","handleLongPress","Alert","alert","title","text","style","onPress","handleTogglePress","onGestureEvent","event","nativeEvent","translationX","useNativeDriver","onHandlerStateChange","state","State","END","Math","abs","ACTIVE","spring","toValue","start","renderSwipeActions","jsxs","View","styles","swipeActionsContainer","children","jsx","swipeActionLeft","Text","swipeActionText","swipeActionRight","container","PanGestureHandler","taskContainer","backgroundColor","transform","translateX","completedTask","overdueTask","priorityIndicator","TouchableOpacity","toggleButton","checkbox","checkedBox","checkmark","content","onLongPress","activeOpacity","header","completedTitle","numberOfLines","badges","overdueBadge","overdueBadgeText","todayBadge","todayBadgeText","soonBadge","soonBadgeText","description","completedText","footer","leftFooter","overdueText","todayText","category","rightFooter","priorityBadge","priorityText","toUpperCase","estimatedDuration","duration","completedAt","StyleSheet","create","marginHorizontal","marginVertical","position","top","left","right","bottom","flexDirection","borderRadius","overflow","flex","justifyContent","alignItems","color","fontWeight","fontSize","borderWidth","borderColor","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","opacity","padding","paddingLeft","marginBottom","marginRight","textDecorationLine","gap","paddingHorizontal","paddingVertical","lineHeight","textTransform","fontStyle","marginTop","_default","exports"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/src/components/TaskItem.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Alert,\n  Animated,\n  PanGestureHandler,\n  State,\n} from 'react-native';\nimport { Task } from '../types';\nimport { formatDateString, isPastDate, isToday } from '../utils/helpers';\nimport { isTaskDueSoon } from '../utils/taskUtils';\n\ninterface TaskItemProps {\n  task: Task;\n  onEdit: (task: Task) => void;\n  onDelete: (task: Task) => void;\n  onToggleCompletion: (task: Task) => void;\n}\n\nconst TaskItem: React.FC<TaskItemProps> = ({\n  task,\n  onEdit,\n  onDelete,\n  onToggleCompletion,\n}) => {\n  const [swipeX] = useState(new Animated.Value(0));\n  const [isSwipeActive, setIsSwipeActive] = useState(false);\n\n  const isOverdue = !task.isCompleted && isPastDate(task.dueDate);\n  const isDueToday = isToday(task.dueDate);\n  const isDueSoon = isTaskDueSoon(task, 48); // 48 hours threshold\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'high':\n        return '#dc3545';\n      case 'medium':\n        return '#ffc107';\n      case 'low':\n        return '#28a745';\n      default:\n        return '#6c757d';\n    }\n  };\n\n  const getPriorityBackgroundColor = (priority: string) => {\n    switch (priority) {\n      case 'high':\n        return '#fff5f5';\n      case 'medium':\n        return '#fffbf0';\n      case 'low':\n        return '#f0fff4';\n      default:\n        return '#f8f9fa';\n    }\n  };\n\n  const formatDueDate = (date: Date) => {\n    if (isToday(date)) {\n      return 'Today';\n    }\n    \n    const now = new Date();\n    const tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    \n    if (formatDateString(date) === formatDateString(tomorrow)) {\n      return 'Tomorrow';\n    }\n    \n    return formatDateString(date);\n  };\n\n  const handlePress = () => {\n    if (isSwipeActive) {\n      resetSwipe();\n      return;\n    }\n    onEdit(task);\n  };\n\n  const handleLongPress = () => {\n    Alert.alert(\n      task.title,\n      'What would you like to do?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { text: 'Edit', onPress: () => onEdit(task) },\n        { \n          text: task.isCompleted ? 'Mark Incomplete' : 'Mark Complete',\n          onPress: () => onToggleCompletion(task)\n        },\n        { text: 'Delete', style: 'destructive', onPress: () => onDelete(task) },\n      ]\n    );\n  };\n\n  const handleTogglePress = () => {\n    onToggleCompletion(task);\n  };\n\n  const onGestureEvent = Animated.event(\n    [{ nativeEvent: { translationX: swipeX } }],\n    { useNativeDriver: false }\n  );\n\n  const onHandlerStateChange = (event: any) => {\n    if (event.nativeEvent.state === State.END) {\n      const { translationX } = event.nativeEvent;\n      \n      if (Math.abs(translationX) > 100) {\n        // Swipe threshold reached\n        if (translationX > 0) {\n          // Swipe right - complete task\n          onToggleCompletion(task);\n        } else {\n          // Swipe left - delete task\n          onDelete(task);\n        }\n        resetSwipe();\n      } else {\n        // Return to original position\n        resetSwipe();\n      }\n    } else if (event.nativeEvent.state === State.ACTIVE) {\n      setIsSwipeActive(true);\n    }\n  };\n\n  const resetSwipe = () => {\n    Animated.spring(swipeX, {\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n    setIsSwipeActive(false);\n  };\n\n  const renderSwipeActions = () => (\n    <View style={styles.swipeActionsContainer}>\n      <View style={styles.swipeActionLeft}>\n        <Text style={styles.swipeActionText}>\n          {task.isCompleted ? 'Incomplete' : 'Complete'}\n        </Text>\n      </View>\n      <View style={styles.swipeActionRight}>\n        <Text style={styles.swipeActionText}>Delete</Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      {renderSwipeActions()}\n      \n      <PanGestureHandler\n        onGestureEvent={onGestureEvent}\n        onHandlerStateChange={onHandlerStateChange}\n      >\n        <Animated.View\n          style={[\n            styles.taskContainer,\n            {\n              backgroundColor: getPriorityBackgroundColor(task.priority),\n              transform: [{ translateX: swipeX }],\n            },\n            task.isCompleted && styles.completedTask,\n            isOverdue && styles.overdueTask,\n          ]}\n        >\n          {/* Priority Indicator */}\n          <View\n            style={[\n              styles.priorityIndicator,\n              { backgroundColor: getPriorityColor(task.priority) },\n            ]}\n          />\n\n          {/* Completion Toggle */}\n          <TouchableOpacity\n            onPress={handleTogglePress}\n            style={styles.toggleButton}\n          >\n            <View\n              style={[\n                styles.checkbox,\n                task.isCompleted && styles.checkedBox,\n              ]}\n            >\n              {task.isCompleted && (\n                <Text style={styles.checkmark}>✓</Text>\n              )}\n            </View>\n          </TouchableOpacity>\n\n          {/* Task Content */}\n          <TouchableOpacity\n            style={styles.content}\n            onPress={handlePress}\n            onLongPress={handleLongPress}\n            activeOpacity={0.7}\n          >\n            <View style={styles.header}>\n              <Text\n                style={[\n                  styles.title,\n                  task.isCompleted && styles.completedTitle,\n                ]}\n                numberOfLines={2}\n              >\n                {task.title}\n              </Text>\n              \n              <View style={styles.badges}>\n                {isOverdue && (\n                  <View style={styles.overdueBadge}>\n                    <Text style={styles.overdueBadgeText}>Overdue</Text>\n                  </View>\n                )}\n                \n                {isDueToday && !isOverdue && (\n                  <View style={styles.todayBadge}>\n                    <Text style={styles.todayBadgeText}>Today</Text>\n                  </View>\n                )}\n                \n                {isDueSoon && !isDueToday && !isOverdue && (\n                  <View style={styles.soonBadge}>\n                    <Text style={styles.soonBadgeText}>Soon</Text>\n                  </View>\n                )}\n              </View>\n            </View>\n\n            {task.description && (\n              <Text\n                style={[\n                  styles.description,\n                  task.isCompleted && styles.completedText,\n                ]}\n                numberOfLines={2}\n              >\n                {task.description}\n              </Text>\n            )}\n\n            <View style={styles.footer}>\n              <View style={styles.leftFooter}>\n                <Text\n                  style={[\n                    styles.dueDate,\n                    task.isCompleted && styles.completedText,\n                    isOverdue && styles.overdueText,\n                    isDueToday && styles.todayText,\n                  ]}\n                >\n                  Due: {formatDueDate(task.dueDate)}\n                </Text>\n                \n                <Text\n                  style={[\n                    styles.category,\n                    task.isCompleted && styles.completedText,\n                  ]}\n                >\n                  {task.category}\n                </Text>\n              </View>\n\n              <View style={styles.rightFooter}>\n                <View\n                  style={[\n                    styles.priorityBadge,\n                    { backgroundColor: getPriorityColor(task.priority) },\n                  ]}\n                >\n                  <Text style={styles.priorityText}>\n                    {task.priority.toUpperCase()}\n                  </Text>\n                </View>\n                \n                {task.estimatedDuration && (\n                  <Text\n                    style={[\n                      styles.duration,\n                      task.isCompleted && styles.completedText,\n                    ]}\n                  >\n                    {task.estimatedDuration}m\n                  </Text>\n                )}\n              </View>\n            </View>\n\n            {task.completedAt && (\n              <Text style={styles.completedAt}>\n                Completed: {formatDateString(task.completedAt)}\n              </Text>\n            )}\n          </TouchableOpacity>\n        </Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 16,\n    marginVertical: 4,\n    position: 'relative',\n  },\n  swipeActionsContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    borderRadius: 12,\n    overflow: 'hidden',\n  },\n  swipeActionLeft: {\n    flex: 1,\n    backgroundColor: '#28a745',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  swipeActionRight: {\n    flex: 1,\n    backgroundColor: '#dc3545',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  swipeActionText: {\n    color: '#ffffff',\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  taskContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#ffffff',\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#e9ecef',\n    overflow: 'hidden',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  completedTask: {\n    opacity: 0.7,\n  },\n  overdueTask: {\n    borderColor: '#dc3545',\n    borderWidth: 2,\n  },\n  priorityIndicator: {\n    width: 4,\n  },\n  toggleButton: {\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    borderWidth: 2,\n    borderColor: '#ced4da',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ffffff',\n  },\n  checkedBox: {\n    backgroundColor: '#28a745',\n    borderColor: '#28a745',\n  },\n  checkmark: {\n    color: '#ffffff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  content: {\n    flex: 1,\n    padding: 16,\n    paddingLeft: 0,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 8,\n  },\n  title: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#212529',\n    marginRight: 8,\n  },\n  completedTitle: {\n    textDecorationLine: 'line-through',\n    color: '#6c757d',\n  },\n  badges: {\n    flexDirection: 'row',\n    gap: 4,\n  },\n  overdueBadge: {\n    backgroundColor: '#dc3545',\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4,\n  },\n  overdueBadgeText: {\n    color: '#ffffff',\n    fontSize: 10,\n    fontWeight: '600',\n  },\n  todayBadge: {\n    backgroundColor: '#007bff',\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4,\n  },\n  todayBadgeText: {\n    color: '#ffffff',\n    fontSize: 10,\n    fontWeight: '600',\n  },\n  soonBadge: {\n    backgroundColor: '#ffc107',\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4,\n  },\n  soonBadgeText: {\n    color: '#212529',\n    fontSize: 10,\n    fontWeight: '600',\n  },\n  description: {\n    fontSize: 14,\n    color: '#6c757d',\n    lineHeight: 18,\n    marginBottom: 12,\n  },\n  completedText: {\n    color: '#adb5bd',\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n  leftFooter: {\n    flex: 1,\n  },\n  rightFooter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  dueDate: {\n    fontSize: 12,\n    color: '#495057',\n    fontWeight: '500',\n    marginBottom: 2,\n  },\n  overdueText: {\n    color: '#dc3545',\n    fontWeight: '600',\n  },\n  todayText: {\n    color: '#007bff',\n    fontWeight: '600',\n  },\n  category: {\n    fontSize: 11,\n    color: '#6c757d',\n    textTransform: 'capitalize',\n  },\n  priorityBadge: {\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4,\n  },\n  priorityText: {\n    color: '#ffffff',\n    fontSize: 10,\n    fontWeight: '600',\n  },\n  duration: {\n    fontSize: 11,\n    color: '#6c757d',\n    fontWeight: '500',\n  },\n  completedAt: {\n    fontSize: 11,\n    color: '#28a745',\n    fontStyle: 'italic',\n    marginTop: 8,\n  },\n});\n\nexport default TaskItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}