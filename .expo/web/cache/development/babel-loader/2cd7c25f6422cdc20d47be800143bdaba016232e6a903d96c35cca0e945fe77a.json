{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\nvar _utils = require(\"./utils\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar DiscreteGestureHandler = function (_GestureHandler) {\n  function DiscreteGestureHandler() {\n    (0, _classCallCheck2.default)(this, DiscreteGestureHandler);\n    return _callSuper(this, DiscreteGestureHandler, arguments);\n  }\n  (0, _inherits2.default)(DiscreteGestureHandler, _GestureHandler);\n  return (0, _createClass2.default)(DiscreteGestureHandler, [{\n    key: \"isDiscrete\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, _ref2) {\n      var x = _ref.x,\n        y = _ref.y,\n        deltaX = _ref.deltaX,\n        deltaY = _ref.deltaY;\n      var maxDeltaX = _ref2.maxDeltaX,\n        maxDeltaY = _ref2.maxDeltaY,\n        maxDistSq = _ref2.maxDistSq,\n        shouldCancelWhenOutside = _ref2.shouldCancelWhenOutside;\n      if (shouldCancelWhenOutside) {\n        if (!this.isPointInView({\n          x: x,\n          y: y\n        })) {\n          return true;\n        }\n      }\n      return (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaX), maxDeltaX) || (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaY), maxDeltaY) || (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref3) {\n      var _ref3$center = _ref3.center,\n        x = _ref3$center.x,\n        y = _ref3$center.y;\n      var rect = this.view.getBoundingClientRect();\n      return {\n        absoluteX: x,\n        absoluteY: y,\n        x: x - rect.left,\n        y: y - rect.top\n      };\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref4, _recognizer, _ref5) {\n      var minPointers = _ref4.minPointers,\n        maxPointers = _ref4.maxPointers,\n        maxDeltaX = _ref4.maxDeltaX,\n        maxDeltaY = _ref4.maxDeltaY,\n        maxDistSq = _ref4.maxDistSq,\n        shouldCancelWhenOutside = _ref4.shouldCancelWhenOutside;\n      var pointerLength = _ref5.maxPointers,\n        center = _ref5.center,\n        deltaX = _ref5.deltaX,\n        deltaY = _ref5.deltaY;\n      var validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n      if (this.shouldFailUnderCustomCriteria(Object.assign({}, center, {\n        deltaX: deltaX,\n        deltaY: deltaY\n      }), {\n        maxDeltaX: maxDeltaX,\n        maxDeltaY: maxDeltaY,\n        maxDistSq: maxDistSq,\n        shouldCancelWhenOutside: shouldCancelWhenOutside\n      }) || !validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }]);\n}(_GestureHandler2.default);\nvar _default = exports.default = DiscreteGestureHandler;","map":{"version":3,"names":["_GestureHandler2","_interopRequireDefault","require","_utils","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","DiscreteGestureHandler","_GestureHandler","_classCallCheck2","arguments","_inherits2","_createClass2","key","get","value","shouldFailUnderCustomCriteria","_ref","_ref2","x","y","deltaX","deltaY","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","isPointInView","TEST_MAX_IF_NOT_NAN","Math","abs","transformNativeEvent","_ref3","_ref3$center","center","rect","view","getBoundingClientRect","absoluteX","absoluteY","left","top","isGestureEnabledForEvent","_ref4","_recognizer","_ref5","minPointers","maxPointers","pointerLength","validPointerCount","Object","assign","isGestureRunning","failed","success","GestureHandler","_default","exports"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/node_modules/react-native-gesture-handler/lib/module/web_hammer/DiscreteGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nabstract class DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY }: any,\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }: any\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(\n        Math.abs(deltaY * deltaY + deltaX * deltaX),\n        maxDistSq\n      )\n    );\n  }\n\n  transformNativeEvent({ center: { x, y } }: any) {\n    // @ts-ignore FIXME(TS)\n    const rect = this.view!.getBoundingClientRect();\n\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength, center, deltaX, deltaY }: any\n  ) {\n    const validPointerCount =\n      pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}