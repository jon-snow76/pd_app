{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _warnOnce = _interopRequireDefault(require(\"warn-once\"));\nvar _StackView = _interopRequireDefault(require(\"../views/Stack/StackView\"));\nvar _excluded = [\"id\", \"initialRouteName\", \"children\", \"screenListeners\", \"screenOptions\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction StackNavigator(_ref) {\n  var id = _ref.id,\n    initialRouteName = _ref.initialRouteName,\n    children = _ref.children,\n    screenListeners = _ref.screenListeners,\n    screenOptions = _ref.screenOptions,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var mode = rest.mode;\n  (0, _warnOnce.default)(mode != null, `Stack Navigator: 'mode=\"${mode}\"' is deprecated. Use 'presentation: \"${mode}\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`);\n  var headerMode = rest.headerMode;\n  (0, _warnOnce.default)(headerMode === 'none', `Stack Navigator: 'headerMode=\"none\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`);\n  (0, _warnOnce.default)(headerMode != null && headerMode !== 'none', `Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`);\n  var keyboardHandlingEnabled = rest.keyboardHandlingEnabled;\n  (0, _warnOnce.default)(keyboardHandlingEnabled !== undefined, `Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`);\n  var defaultScreenOptions = {\n    presentation: mode,\n    headerShown: headerMode ? headerMode !== 'none' : true,\n    headerMode: headerMode && headerMode !== 'none' ? headerMode : undefined,\n    keyboardHandlingEnabled: keyboardHandlingEnabled\n  };\n  var _useNavigationBuilder = (0, _native.useNavigationBuilder)(_native.StackRouter, {\n      id: id,\n      initialRouteName: initialRouteName,\n      children: children,\n      screenListeners: screenListeners,\n      screenOptions: screenOptions,\n      defaultScreenOptions: defaultScreenOptions\n    }),\n    state = _useNavigationBuilder.state,\n    descriptors = _useNavigationBuilder.descriptors,\n    navigation = _useNavigationBuilder.navigation,\n    NavigationContent = _useNavigationBuilder.NavigationContent;\n  React.useEffect(function () {\n    var _navigation$addListen;\n    return ((_navigation$addListen = navigation.addListener) === null || _navigation$addListen === void 0 ? void 0 : _navigation$addListen.call(navigation, 'tabPress', function (e) {\n        var isFocused = navigation.isFocused();\n        requestAnimationFrame(function () {\n          if (state.index > 0 && isFocused && !e.defaultPrevented) {\n            navigation.dispatch(Object.assign({}, _native.StackActions.popToTop(), {\n              target: state.key\n            }));\n          }\n        });\n      })\n    );\n  }, [navigation, state.index, state.key]);\n  return React.createElement(NavigationContent, null, React.createElement(_StackView.default, _extends({}, rest, {\n    state: state,\n    descriptors: descriptors,\n    navigation: navigation\n  })));\n}\nvar _default = exports.default = (0, _native.createNavigatorFactory)(StackNavigator);","map":{"version":3,"names":["_native","require","React","_interopRequireWildcard","_warnOnce","_interopRequireDefault","_StackView","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","StackNavigator","_ref","id","initialRouteName","children","screenListeners","screenOptions","rest","_objectWithoutProperties2","mode","warnOnce","headerMode","keyboardHandlingEnabled","undefined","defaultScreenOptions","presentation","headerShown","_useNavigationBuilder","useNavigationBuilder","StackRouter","state","descriptors","navigation","NavigationContent","useEffect","_navigation$addListen","addListener","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","assign","StackActions","popToTop","target","key","createElement","StackView","_extends","_default","exports","createNavigatorFactory"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/node_modules/@react-navigation/stack/src/navigators/createStackNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  StackHeaderMode,\n  StackNavigationConfig,\n  StackNavigationEventMap,\n  StackNavigationOptions,\n} from '../types';\nimport StackView from '../views/Stack/StackView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  StackNavigationState<ParamListBase>,\n  StackNavigationOptions,\n  StackNavigationEventMap\n> &\n  StackRouterOptions &\n  StackNavigationConfig;\n\nfunction StackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: Props) {\n  // @ts-expect-error: mode is deprecated\n  const mode = rest.mode as 'card' | 'modal' | undefined;\n\n  warnOnce(\n    mode != null,\n    `Stack Navigator: 'mode=\"${mode}\"' is deprecated. Use 'presentation: \"${mode}\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`\n  );\n\n  // @ts-expect-error: headerMode='none' is deprecated\n  const headerMode = rest.headerMode as StackHeaderMode | 'none' | undefined;\n\n  warnOnce(\n    headerMode === 'none',\n    `Stack Navigator: 'headerMode=\"none\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`\n  );\n\n  warnOnce(\n    headerMode != null && headerMode !== 'none',\n    `Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`\n  );\n\n  // @ts-expect-error: headerMode='none' is deprecated\n  const keyboardHandlingEnabled = rest.keyboardHandlingEnabled;\n\n  warnOnce(\n    keyboardHandlingEnabled !== undefined,\n    `Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`\n  );\n\n  const defaultScreenOptions: StackNavigationOptions = {\n    presentation: mode,\n    headerShown: headerMode ? headerMode !== 'none' : true,\n    headerMode: headerMode && headerMode !== 'none' ? headerMode : undefined,\n    keyboardHandlingEnabled,\n  };\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      StackNavigationOptions,\n      StackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation.addListener?.('tabPress', (e) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as unknown as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <StackView\n        {...rest}\n        state={state}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  StackNavigationOptions,\n  StackNavigationEventMap,\n  typeof StackNavigator\n>(StackNavigator);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}