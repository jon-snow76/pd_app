{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOffline = exports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _OfflineService = require(\"../services/OfflineService\");\nvar useOffline = exports.useOffline = function useOffline() {\n  var _useState = (0, _react.useState)(true),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    isOnline = _useState2[0],\n    setIsOnline = _useState2[1];\n  var _useState3 = (0, _react.useState)([]),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    syncQueue = _useState4[0],\n    setSyncQueue = _useState4[1];\n  var _useState5 = (0, _react.useState)(false),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    isInitialized = _useState6[0],\n    setIsInitialized = _useState6[1];\n  (0, _react.useEffect)(function () {\n    var unsubscribe = null;\n    var initializeOfflineService = function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          yield _OfflineService.offlineService.initialize();\n          setIsOnline(_OfflineService.offlineService.getIsOnline());\n          setSyncQueue(_OfflineService.offlineService.getSyncQueue());\n          setIsInitialized(true);\n          unsubscribe = _OfflineService.offlineService.addConnectionListener(function (online) {\n            setIsOnline(online);\n            setSyncQueue(_OfflineService.offlineService.getSyncQueue());\n          });\n        } catch (error) {\n          console.error('Failed to initialize offline service:', error);\n        }\n      });\n      return function initializeOfflineService() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    initializeOfflineService();\n    return function () {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, []);\n  var queueOperation = (0, _react.useCallback)(function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (operation) {\n      try {\n        yield _OfflineService.offlineService.queueOperation(operation);\n        setSyncQueue(_OfflineService.offlineService.getSyncQueue());\n      } catch (error) {\n        console.error('Failed to queue operation:', error);\n        throw error;\n      }\n    });\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  var processSyncQueue = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    try {\n      yield _OfflineService.offlineService.processSyncQueue();\n      setSyncQueue(_OfflineService.offlineService.getSyncQueue());\n    } catch (error) {\n      console.error('Failed to process sync queue:', error);\n      throw error;\n    }\n  }), []);\n  var clearSyncQueue = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    try {\n      yield _OfflineService.offlineService.clearSyncQueue();\n      setSyncQueue([]);\n    } catch (error) {\n      console.error('Failed to clear sync queue:', error);\n      throw error;\n    }\n  }), []);\n  var createBackup = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    try {\n      return yield _OfflineService.offlineService.createBackup();\n    } catch (error) {\n      console.error('Failed to create backup:', error);\n      throw error;\n    }\n  }), []);\n  var restoreFromBackup = (0, _react.useCallback)(function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* (backup) {\n      try {\n        yield _OfflineService.offlineService.restoreFromBackup(backup);\n      } catch (error) {\n        console.error('Failed to restore from backup:', error);\n        throw error;\n      }\n    });\n    return function (_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), []);\n  var getLatestBackup = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    try {\n      return yield _OfflineService.offlineService.getLatestBackup();\n    } catch (error) {\n      console.error('Failed to get latest backup:', error);\n      return null;\n    }\n  }), []);\n  return {\n    isOnline: isOnline,\n    syncQueue: syncQueue,\n    isInitialized: isInitialized,\n    queueOperation: queueOperation,\n    processSyncQueue: processSyncQueue,\n    clearSyncQueue: clearSyncQueue,\n    createBackup: createBackup,\n    restoreFromBackup: restoreFromBackup,\n    getLatestBackup: getLatestBackup,\n    hasPendingOperations: syncQueue.length > 0\n  };\n};\nvar _default = exports.default = useOffline;","map":{"version":3,"names":["_react","require","_OfflineService","useOffline","exports","_useState","useState","_useState2","_slicedToArray2","default","isOnline","setIsOnline","_useState3","_useState4","syncQueue","setSyncQueue","_useState5","_useState6","isInitialized","setIsInitialized","useEffect","unsubscribe","initializeOfflineService","_ref","_asyncToGenerator2","offlineService","initialize","getIsOnline","getSyncQueue","addConnectionListener","online","error","console","apply","arguments","queueOperation","useCallback","_ref2","operation","_x","processSyncQueue","clearSyncQueue","createBackup","restoreFromBackup","_ref6","backup","_x2","getLatestBackup","hasPendingOperations","length","_default"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/src/hooks/useOffline.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { offlineService, QueuedOperation, AppBackup } from '../services/OfflineService';\n\n/**\n * Hook for managing offline functionality\n */\nexport const useOffline = () => {\n  const [isOnline, setIsOnline] = useState(true);\n  const [syncQueue, setSyncQueue] = useState<QueuedOperation[]>([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    let unsubscribe: (() => void) | null = null;\n\n    const initializeOfflineService = async () => {\n      try {\n        await offlineService.initialize();\n        setIsOnline(offlineService.getIsOnline());\n        setSyncQueue(offlineService.getSyncQueue());\n        setIsInitialized(true);\n\n        // Subscribe to connection changes\n        unsubscribe = offlineService.addConnectionListener((online) => {\n          setIsOnline(online);\n          setSyncQueue(offlineService.getSyncQueue());\n        });\n      } catch (error) {\n        console.error('Failed to initialize offline service:', error);\n      }\n    };\n\n    initializeOfflineService();\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, []);\n\n  const queueOperation = useCallback(async (operation: Omit<QueuedOperation, 'id' | 'timestamp'>) => {\n    try {\n      await offlineService.queueOperation(operation);\n      setSyncQueue(offlineService.getSyncQueue());\n    } catch (error) {\n      console.error('Failed to queue operation:', error);\n      throw error;\n    }\n  }, []);\n\n  const processSyncQueue = useCallback(async () => {\n    try {\n      await offlineService.processSyncQueue();\n      setSyncQueue(offlineService.getSyncQueue());\n    } catch (error) {\n      console.error('Failed to process sync queue:', error);\n      throw error;\n    }\n  }, []);\n\n  const clearSyncQueue = useCallback(async () => {\n    try {\n      await offlineService.clearSyncQueue();\n      setSyncQueue([]);\n    } catch (error) {\n      console.error('Failed to clear sync queue:', error);\n      throw error;\n    }\n  }, []);\n\n  const createBackup = useCallback(async (): Promise<AppBackup> => {\n    try {\n      return await offlineService.createBackup();\n    } catch (error) {\n      console.error('Failed to create backup:', error);\n      throw error;\n    }\n  }, []);\n\n  const restoreFromBackup = useCallback(async (backup: AppBackup) => {\n    try {\n      await offlineService.restoreFromBackup(backup);\n    } catch (error) {\n      console.error('Failed to restore from backup:', error);\n      throw error;\n    }\n  }, []);\n\n  const getLatestBackup = useCallback(async (): Promise<AppBackup | null> => {\n    try {\n      return await offlineService.getLatestBackup();\n    } catch (error) {\n      console.error('Failed to get latest backup:', error);\n      return null;\n    }\n  }, []);\n\n  return {\n    isOnline,\n    syncQueue,\n    isInitialized,\n    queueOperation,\n    processSyncQueue,\n    clearSyncQueue,\n    createBackup,\n    restoreFromBackup,\n    getLatestBackup,\n    hasPendingOperations: syncQueue.length > 0,\n  };\n};\n\nexport default useOffline;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}