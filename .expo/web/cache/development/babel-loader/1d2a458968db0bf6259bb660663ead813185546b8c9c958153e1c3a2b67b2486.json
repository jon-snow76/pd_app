{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  enableScreens: true,\n  screensEnabled: true,\n  enableFreeze: true,\n  NativeScreen: true,\n  Screen: true,\n  InnerScreen: true,\n  ScreenContext: true,\n  ScreenContainer: true,\n  NativeScreenContainer: true,\n  NativeScreenNavigationContainer: true,\n  ScreenStack: true,\n  FullWindowOverlay: true,\n  ScreenStackHeaderBackButtonImage: true,\n  ScreenStackHeaderRightView: true,\n  ScreenStackHeaderLeftView: true,\n  ScreenStackHeaderCenterView: true,\n  ScreenStackHeaderSearchBarView: true,\n  ScreenStackHeaderConfig: true,\n  SearchBar: true,\n  ScreenStackHeaderSubview: true,\n  shouldUseActivityState: true,\n  useTransitionProgress: true,\n  isSearchBarAvailableForCurrentPlatform: true,\n  isNewBackTitleImplementation: true,\n  executeNativeBackPress: true\n};\nexports.SearchBar = exports.ScreenStackHeaderSubview = exports.ScreenStackHeaderSearchBarView = exports.ScreenStackHeaderRightView = exports.ScreenStackHeaderLeftView = exports.ScreenStackHeaderConfig = exports.ScreenStackHeaderCenterView = exports.ScreenStackHeaderBackButtonImage = exports.ScreenStack = exports.ScreenContext = exports.ScreenContainer = exports.Screen = exports.NativeScreenNavigationContainer = exports.NativeScreenContainer = exports.NativeScreen = exports.InnerScreen = exports.FullWindowOverlay = void 0;\nexports.enableFreeze = enableFreeze;\nexports.enableScreens = enableScreens;\nObject.defineProperty(exports, \"executeNativeBackPress\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.executeNativeBackPress;\n  }\n});\nObject.defineProperty(exports, \"isNewBackTitleImplementation\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.isNewBackTitleImplementation;\n  }\n});\nObject.defineProperty(exports, \"isSearchBarAvailableForCurrentPlatform\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.isSearchBarAvailableForCurrentPlatform;\n  }\n});\nexports.screensEnabled = screensEnabled;\nexports.shouldUseActivityState = void 0;\nObject.defineProperty(exports, \"useTransitionProgress\", {\n  enumerable: true,\n  get: function get() {\n    return _useTransitionProgress.default;\n  }\n});\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _types = require(\"./types\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _types[key];\n    }\n  });\n});\nvar _useTransitionProgress = _interopRequireDefault(require(\"./useTransitionProgress\"));\nvar _utils = require(\"./utils\");\nvar _excluded = [\"active\", \"activityState\", \"style\", \"enabled\"];\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ENABLE_SCREENS = true;\nfunction enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  ENABLE_SCREENS = shouldEnableScreens;\n}\nfunction screensEnabled() {\n  return ENABLE_SCREENS;\n}\nfunction enableFreeze() {\n  var shouldEnableReactFreeze = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n}\nvar NativeScreen = exports.NativeScreen = function (_React$Component) {\n  function NativeScreen() {\n    (0, _classCallCheck2.default)(this, NativeScreen);\n    return _callSuper(this, NativeScreen, arguments);\n  }\n  (0, _inherits2.default)(NativeScreen, _React$Component);\n  return (0, _createClass2.default)(NativeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        active = _this$props.active,\n        activityState = _this$props.activityState,\n        style = _this$props.style,\n        _this$props$enabled = _this$props.enabled,\n        enabled = _this$props$enabled === void 0 ? ENABLE_SCREENS : _this$props$enabled,\n        rest = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n      if (enabled) {\n        if (active !== undefined && activityState === undefined) {\n          activityState = active !== 0 ? 2 : 0;\n        }\n        return _react.default.createElement(_reactNative.View, _extends({\n          hidden: activityState === 0,\n          style: [style, {\n            display: activityState !== 0 ? 'flex' : 'none'\n          }]\n        }, rest));\n      }\n      return _react.default.createElement(_reactNative.View, rest);\n    }\n  }]);\n}(_react.default.Component);\nvar Screen = exports.Screen = _reactNative.Animated.createAnimatedComponent(NativeScreen);\nvar InnerScreen = exports.InnerScreen = _reactNative.View;\nvar ScreenContext = exports.ScreenContext = _react.default.createContext(Screen);\nvar ScreenContainer = exports.ScreenContainer = _reactNative.View;\nvar NativeScreenContainer = exports.NativeScreenContainer = _reactNative.View;\nvar NativeScreenNavigationContainer = exports.NativeScreenNavigationContainer = _reactNative.View;\nvar ScreenStack = exports.ScreenStack = _reactNative.View;\nvar FullWindowOverlay = exports.FullWindowOverlay = _reactNative.View;\nvar ScreenStackHeaderBackButtonImage = exports.ScreenStackHeaderBackButtonImage = function ScreenStackHeaderBackButtonImage(props) {\n  return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, _extends({\n    resizeMode: \"center\",\n    fadeDuration: 0\n  }, props)));\n};\nvar ScreenStackHeaderRightView = exports.ScreenStackHeaderRightView = function ScreenStackHeaderRightView(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\nvar ScreenStackHeaderLeftView = exports.ScreenStackHeaderLeftView = function ScreenStackHeaderLeftView(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\nvar ScreenStackHeaderCenterView = exports.ScreenStackHeaderCenterView = function ScreenStackHeaderCenterView(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\nvar ScreenStackHeaderSearchBarView = exports.ScreenStackHeaderSearchBarView = function ScreenStackHeaderSearchBarView(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\nvar ScreenStackHeaderConfig = exports.ScreenStackHeaderConfig = function ScreenStackHeaderConfig(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\nvar SearchBar = exports.SearchBar = _reactNative.View;\nvar ScreenStackHeaderSubview = exports.ScreenStackHeaderSubview = _reactNative.View;\nvar shouldUseActivityState = exports.shouldUseActivityState = true;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_types","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_useTransitionProgress","_utils","_excluded","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","valueOf","ENABLE_SCREENS","enableScreens","shouldEnableScreens","arguments","length","undefined","screensEnabled","enableFreeze","shouldEnableReactFreeze","NativeScreen","_React$Component","_classCallCheck2","_inherits2","_createClass2","value","render","_this$props","props","active","activityState","style","_this$props$enabled","enabled","rest","_objectWithoutProperties2","React","createElement","View","_extends","hidden","display","Component","Screen","Animated","createAnimatedComponent","InnerScreen","ScreenContext","createContext","ScreenContainer","NativeScreenContainer","NativeScreenNavigationContainer","ScreenStack","FullWindowOverlay","ScreenStackHeaderBackButtonImage","Image","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenStackHeaderConfig","SearchBar","ScreenStackHeaderSubview","shouldUseActivityState"],"sources":["/Users/vaishnavkrishnan/Documents/projects/pd_app/node_modules/react-native-screens/lib/module/index.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Animated, View, ViewProps, ImageProps, Image } from 'react-native';\nimport {\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  HeaderSubviewTypes,\n  SearchBarProps,\n} from './types';\n\nexport * from './types';\nexport { default as useTransitionProgress } from './useTransitionProgress';\nexport {\n  isSearchBarAvailableForCurrentPlatform,\n  isNewBackTitleImplementation,\n  executeNativeBackPress,\n} from './utils';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// @ts-ignore function stub, freezing logic is located in index.native.tsx\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function enableFreeze(shouldEnableReactFreeze = true): void {\n  // noop\n}\n\nexport class NativeScreen extends React.Component<ScreenProps> {\n  render(): JSX.Element {\n    let {\n      active,\n      activityState,\n      style,\n      enabled = ENABLE_SCREENS,\n      ...rest\n    } = this.props;\n\n    if (enabled) {\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0; // change taken from index.native.tsx\n      }\n      return (\n        <View\n          // @ts-expect-error: hidden exists on web, but not in React Native\n          hidden={activityState === 0}\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          {...rest}\n        />\n      );\n    }\n\n    return <View {...rest} />;\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const InnerScreen = View;\n\nexport const ScreenContext = React.createContext(Screen);\n\nexport const ScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> =\n  View;\n\nexport const NativeScreenNavigationContainer: React.ComponentType<ScreenContainerProps> =\n  View;\n\nexport const ScreenStack: React.ComponentType<ScreenStackProps> = View;\n\nexport const FullWindowOverlay = View as React.ComponentType<{\n  children: ReactNode;\n}>;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <View>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </View>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<Omit<SearchBarProps, 'ref'>>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderConfig = (\n  props: React.PropsWithChildren<ScreenStackHeaderConfigProps>\n): JSX.Element => <View {...props} />;\n\n// @ts-expect-error: search bar props have no common props with View\nexport const SearchBar: React.ComponentType<SearchBarProps> = View;\n\nexport const ScreenStackHeaderSubview: React.ComponentType<\n  React.PropsWithChildren<ViewProps & { type?: HeaderSubviewTypes }>\n> = View;\n\nexport const shouldUseActivityState = true;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}