{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateTimetableEvent = exports.validateTimeFormat = exports.validateTask = exports.validateMedication = exports.validateEventConflicts = exports.checkEventOverlap = void 0;\nvar validateTimetableEvent = exports.validateTimetableEvent = function validateTimetableEvent(event) {\n  var errors = [];\n  if (!event.title || event.title.trim().length === 0) {\n    errors.push('Title is required');\n  }\n  if (!event.startTime || !(event.startTime instanceof Date) || isNaN(event.startTime.getTime())) {\n    errors.push('Valid start time is required');\n  }\n  if (!event.duration || event.duration <= 0) {\n    errors.push('Duration must be greater than 0 minutes');\n  }\n  if (event.duration && event.duration > 1440) {\n    errors.push('Duration cannot exceed 24 hours');\n  }\n  if (!event.category || !['work', 'personal', 'health', 'other'].includes(event.category)) {\n    errors.push('Valid category is required');\n  }\n  if (event.isRecurring && event.recurrencePattern) {\n    if (!['daily', 'weekly', 'custom'].includes(event.recurrencePattern.type)) {\n      errors.push('Valid recurrence type is required');\n    }\n    if (event.recurrencePattern.interval <= 0) {\n      errors.push('Recurrence interval must be greater than 0');\n    }\n  }\n  return {\n    isValid: errors.length === 0,\n    errors: errors\n  };\n};\nvar validateTask = exports.validateTask = function validateTask(task) {\n  var errors = [];\n  if (!task.title || task.title.trim().length === 0) {\n    errors.push('Title is required');\n  }\n  if (!task.priority || !['high', 'medium', 'low'].includes(task.priority)) {\n    errors.push('Valid priority is required');\n  }\n  if (!task.dueDate || !(task.dueDate instanceof Date) || isNaN(task.dueDate.getTime())) {\n    errors.push('Valid due date is required');\n  }\n  if (!task.category || task.category.trim().length === 0) {\n    errors.push('Category is required');\n  }\n  if (task.estimatedDuration && task.estimatedDuration <= 0) {\n    errors.push('Estimated duration must be greater than 0 minutes');\n  }\n  return {\n    isValid: errors.length === 0,\n    errors: errors\n  };\n};\nvar validateMedication = exports.validateMedication = function validateMedication(medication) {\n  var errors = [];\n  if (!medication.name || medication.name.trim().length === 0) {\n    errors.push('Medication name is required');\n  }\n  if (!medication.dosage || medication.dosage.trim().length === 0) {\n    errors.push('Dosage is required');\n  }\n  if (!medication.reminderTimes || medication.reminderTimes.length === 0) {\n    errors.push('At least one reminder time is required');\n  }\n  if (medication.reminderTimes) {\n    var timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    medication.reminderTimes.forEach(function (time, index) {\n      if (!timeRegex.test(time)) {\n        errors.push(`Reminder time ${index + 1} must be in HH:MM format`);\n      }\n    });\n  }\n  return {\n    isValid: errors.length === 0,\n    errors: errors\n  };\n};\nvar validateTimeFormat = exports.validateTimeFormat = function validateTimeFormat(time) {\n  var timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n  return timeRegex.test(time);\n};\nvar checkEventOverlap = exports.checkEventOverlap = function checkEventOverlap(event1, event2) {\n  var event1End = new Date(event1.startTime.getTime() + event1.duration * 60000);\n  var event2End = new Date(event2.startTime.getTime() + event2.duration * 60000);\n  return event1.startTime < event2End && event1End > event2.startTime || event2.startTime < event1End && event2End > event1.startTime;\n};\nvar validateEventConflicts = exports.validateEventConflicts = function validateEventConflicts(newEvent, existingEvents) {\n  var errors = [];\n  var conflictingEvents = existingEvents.filter(function (event) {\n    return event.id !== newEvent.id && checkEventOverlap(newEvent, event);\n  });\n  if (conflictingEvents.length > 0) {\n    errors.push(`Event conflicts with ${conflictingEvents.length} existing event(s)`);\n  }\n  return {\n    isValid: errors.length === 0,\n    errors: errors\n  };\n};","map":{"version":3,"names":["validateTimetableEvent","exports","event","errors","title","trim","length","push","startTime","Date","isNaN","getTime","duration","category","includes","isRecurring","recurrencePattern","type","interval","isValid","validateTask","task","priority","dueDate","estimatedDuration","validateMedication","medication","name","dosage","reminderTimes","timeRegex","forEach","time","index","test","validateTimeFormat","checkEventOverlap","event1","event2","event1End","event2End","validateEventConflicts","newEvent","existingEvents","conflictingEvents","filter","id"],"sources":["/Users/vaishnavkrishnan/Documents/projects/pd_app/src/utils/validation.ts"],"sourcesContent":["import { TimetableEvent, Task, Medication, ValidationResult } from '../types';\n\n/**\n * Validates a timetable event object\n */\nexport const validateTimetableEvent = (event: Partial<TimetableEvent>): ValidationResult => {\n  const errors: string[] = [];\n\n  if (!event.title || event.title.trim().length === 0) {\n    errors.push('Title is required');\n  }\n\n  if (!event.startTime || !(event.startTime instanceof Date) || isNaN(event.startTime.getTime())) {\n    errors.push('Valid start time is required');\n  }\n\n  if (!event.duration || event.duration <= 0) {\n    errors.push('Duration must be greater than 0 minutes');\n  }\n\n  if (event.duration && event.duration > 1440) { // 24 hours\n    errors.push('Duration cannot exceed 24 hours');\n  }\n\n  if (!event.category || !['work', 'personal', 'health', 'other'].includes(event.category)) {\n    errors.push('Valid category is required');\n  }\n\n  if (event.isRecurring && event.recurrencePattern) {\n    if (!['daily', 'weekly', 'custom'].includes(event.recurrencePattern.type)) {\n      errors.push('Valid recurrence type is required');\n    }\n    if (event.recurrencePattern.interval <= 0) {\n      errors.push('Recurrence interval must be greater than 0');\n    }\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n};\n\n/**\n * Validates a task object\n */\nexport const validateTask = (task: Partial<Task>): ValidationResult => {\n  const errors: string[] = [];\n\n  if (!task.title || task.title.trim().length === 0) {\n    errors.push('Title is required');\n  }\n\n  if (!task.priority || !['high', 'medium', 'low'].includes(task.priority)) {\n    errors.push('Valid priority is required');\n  }\n\n  if (!task.dueDate || !(task.dueDate instanceof Date) || isNaN(task.dueDate.getTime())) {\n    errors.push('Valid due date is required');\n  }\n\n  if (!task.category || task.category.trim().length === 0) {\n    errors.push('Category is required');\n  }\n\n  if (task.estimatedDuration && task.estimatedDuration <= 0) {\n    errors.push('Estimated duration must be greater than 0 minutes');\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n};\n\n/**\n * Validates a medication object\n */\nexport const validateMedication = (medication: Partial<Medication>): ValidationResult => {\n  const errors: string[] = [];\n\n  if (!medication.name || medication.name.trim().length === 0) {\n    errors.push('Medication name is required');\n  }\n\n  if (!medication.dosage || medication.dosage.trim().length === 0) {\n    errors.push('Dosage is required');\n  }\n\n  if (!medication.reminderTimes || medication.reminderTimes.length === 0) {\n    errors.push('At least one reminder time is required');\n  }\n\n  if (medication.reminderTimes) {\n    const timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    medication.reminderTimes.forEach((time, index) => {\n      if (!timeRegex.test(time)) {\n        errors.push(`Reminder time ${index + 1} must be in HH:MM format`);\n      }\n    });\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n};\n\n/**\n * Validates time format (HH:MM)\n */\nexport const validateTimeFormat = (time: string): boolean => {\n  const timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n  return timeRegex.test(time);\n};\n\n/**\n * Checks if two timetable events overlap\n */\nexport const checkEventOverlap = (event1: TimetableEvent, event2: TimetableEvent): boolean => {\n  const event1End = new Date(event1.startTime.getTime() + event1.duration * 60000);\n  const event2End = new Date(event2.startTime.getTime() + event2.duration * 60000);\n\n  return (\n    (event1.startTime < event2End && event1End > event2.startTime) ||\n    (event2.startTime < event1End && event2End > event1.startTime)\n  );\n};\n\n/**\n * Validates that a new event doesn't conflict with existing events\n */\nexport const validateEventConflicts = (\n  newEvent: TimetableEvent,\n  existingEvents: TimetableEvent[]\n): ValidationResult => {\n  const errors: string[] = [];\n  \n  const conflictingEvents = existingEvents.filter(event => \n    event.id !== newEvent.id && checkEventOverlap(newEvent, event)\n  );\n\n  if (conflictingEvents.length > 0) {\n    errors.push(`Event conflicts with ${conflictingEvents.length} existing event(s)`);\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}