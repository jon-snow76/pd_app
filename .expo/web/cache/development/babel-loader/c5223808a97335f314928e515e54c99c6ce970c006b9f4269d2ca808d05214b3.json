{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\nvar _useOffline2 = require(\"../hooks/useOffline\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/vaishnavkrishnan/Desktop/pd_app/src/components/OfflineIndicator.tsx\";\nvar OfflineIndicator = function OfflineIndicator(_ref) {\n  var onSyncPress = _ref.onSyncPress;\n  var _useOffline = (0, _useOffline2.useOffline)(),\n    isOnline = _useOffline.isOnline,\n    hasPendingOperations = _useOffline.hasPendingOperations,\n    syncQueue = _useOffline.syncQueue;\n  var _React$useState = _react.default.useState(new _reactNative.Animated.Value(0)),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n    fadeAnim = _React$useState2[0];\n  _react.default.useEffect(function () {\n    if (!isOnline || hasPendingOperations) {\n      _reactNative.Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true\n      }).start();\n    } else {\n      _reactNative.Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [isOnline, hasPendingOperations, fadeAnim]);\n  if (isOnline && !hasPendingOperations) {\n    return null;\n  }\n  var getIndicatorContent = function getIndicatorContent() {\n    if (!isOnline) {\n      return {\n        icon: 'wifi-off',\n        text: 'You\\'re offline',\n        subtext: 'Changes will sync when connection is restored',\n        backgroundColor: '#ff6b6b',\n        color: '#ffffff'\n      };\n    } else if (hasPendingOperations) {\n      return {\n        icon: 'sync',\n        text: `${syncQueue.length} changes pending`,\n        subtext: 'Tap to sync now',\n        backgroundColor: '#ffa726',\n        color: '#ffffff'\n      };\n    }\n    return null;\n  };\n  var content = getIndicatorContent();\n  if (!content) return null;\n  return (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n    style: [styles.container, {\n      backgroundColor: content.backgroundColor\n    }, {\n      opacity: fadeAnim\n    }],\n    children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      style: styles.touchable,\n      onPress: onSyncPress,\n      disabled: !isOnline || !hasPendingOperations,\n      children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: styles.content,\n        children: [(0, _jsxRuntime.jsx)(_MaterialIcons.default, {\n          name: content.icon,\n          size: 20,\n          color: content.color,\n          style: styles.icon\n        }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: styles.textContainer,\n          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: [styles.text, {\n              color: content.color\n            }],\n            children: content.text\n          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: [styles.subtext, {\n              color: content.color\n            }],\n            children: content.subtext\n          })]\n        })]\n      })\n    })\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n    elevation: 1000\n  },\n  touchable: {\n    paddingHorizontal: 16,\n    paddingVertical: 12\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: 12\n  },\n  textContainer: {\n    flex: 1\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 2\n  },\n  subtext: {\n    fontSize: 12,\n    opacity: 0.9\n  }\n});\nvar _default = exports.default = OfflineIndicator;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_MaterialIcons","_useOffline2","_jsxRuntime","_this","_jsxFileName","OfflineIndicator","_ref","onSyncPress","_useOffline","useOffline","isOnline","hasPendingOperations","syncQueue","_React$useState","React","useState","Animated","Value","_React$useState2","_slicedToArray2","default","fadeAnim","useEffect","timing","toValue","duration","useNativeDriver","start","getIndicatorContent","icon","text","subtext","backgroundColor","color","length","content","jsx","View","style","styles","container","opacity","children","TouchableOpacity","touchable","onPress","disabled","jsxs","name","size","textContainer","Text","StyleSheet","create","position","top","left","right","zIndex","elevation","paddingHorizontal","paddingVertical","flexDirection","alignItems","marginRight","flex","fontSize","fontWeight","marginBottom","_default","exports"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/src/components/OfflineIndicator.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  TouchableOpacity,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { useOffline } from '../hooks/useOffline';\n\ninterface OfflineIndicatorProps {\n  onSyncPress?: () => void;\n}\n\nconst OfflineIndicator: React.FC<OfflineIndicatorProps> = ({ onSyncPress }) => {\n  const { isOnline, hasPendingOperations, syncQueue } = useOffline();\n  const [fadeAnim] = React.useState(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isOnline || hasPendingOperations) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [isOnline, hasPendingOperations, fadeAnim]);\n\n  if (isOnline && !hasPendingOperations) {\n    return null;\n  }\n\n  const getIndicatorContent = () => {\n    if (!isOnline) {\n      return {\n        icon: 'wifi-off',\n        text: 'You\\'re offline',\n        subtext: 'Changes will sync when connection is restored',\n        backgroundColor: '#ff6b6b',\n        color: '#ffffff',\n      };\n    } else if (hasPendingOperations) {\n      return {\n        icon: 'sync',\n        text: `${syncQueue.length} changes pending`,\n        subtext: 'Tap to sync now',\n        backgroundColor: '#ffa726',\n        color: '#ffffff',\n      };\n    }\n    \n    return null;\n  };\n\n  const content = getIndicatorContent();\n  if (!content) return null;\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        { backgroundColor: content.backgroundColor },\n        { opacity: fadeAnim },\n      ]}>\n      <TouchableOpacity\n        style={styles.touchable}\n        onPress={onSyncPress}\n        disabled={!isOnline || !hasPendingOperations}>\n        <View style={styles.content}>\n          <Icon\n            name={content.icon}\n            size={20}\n            color={content.color}\n            style={styles.icon}\n          />\n          <View style={styles.textContainer}>\n            <Text style={[styles.text, { color: content.color }]}>\n              {content.text}\n            </Text>\n            <Text style={[styles.subtext, { color: content.color }]}>\n              {content.subtext}\n            </Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n    elevation: 1000,\n  },\n  touchable: {\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: 12,\n  },\n  textContainer: {\n    flex: 1,\n  },\n  text: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 2,\n  },\n  subtext: {\n    fontSize: 12,\n    opacity: 0.9,\n  },\n});\n\nexport default OfflineIndicator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}