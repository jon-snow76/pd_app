{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _native = require(\"@react-navigation/native\");\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\nvar _vectorIcons = require(\"@expo/vector-icons\");\nvar _TimetableScreen = _interopRequireDefault(require(\"./src/screens/TimetableScreen\"));\nvar _TasksScreen = _interopRequireDefault(require(\"./src/screens/TasksScreen\"));\nvar _MedicineScreen = _interopRequireDefault(require(\"./src/screens/MedicineScreen\"));\nvar _ProgressScreen = _interopRequireDefault(require(\"./src/screens/ProgressScreen\"));\nvar _AppContext = require(\"./src/context/AppContext\");\nvar _TimetableContext = require(\"./src/context/TimetableContext\");\nvar _TasksContext = require(\"./src/context/TasksContext\");\nvar _MedicationContext = require(\"./src/context/MedicationContext\");\nvar _ProgressContext = require(\"./src/context/ProgressContext\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/vaishnavkrishnan/Desktop/pd_app/App.tsx\";\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\nvar MainTabNavigator = function MainTabNavigator() {\n  return (0, _jsxRuntime.jsxs)(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          switch (route.name) {\n            case 'Timetable':\n              iconName = 'calendar-outline';\n              break;\n            case 'Tasks':\n              iconName = 'checkmark-circle-outline';\n              break;\n            case 'Medications':\n              iconName = 'medical-outline';\n              break;\n            case 'Progress':\n              iconName = 'analytics-outline';\n              break;\n            default:\n              iconName = 'help-outline';\n          }\n          return (0, _jsxRuntime.jsx)(_vectorIcons.Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#007bff',\n        tabBarInactiveTintColor: '#6c757d',\n        tabBarStyle: {\n          backgroundColor: '#ffffff',\n          borderTopWidth: 1,\n          borderTopColor: '#e9ecef',\n          paddingBottom: 5,\n          paddingTop: 5,\n          height: 60\n        },\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '500'\n        },\n        headerStyle: {\n          backgroundColor: '#ffffff',\n          borderBottomWidth: 1,\n          borderBottomColor: '#e9ecef'\n        },\n        headerTitleStyle: {\n          fontSize: 18,\n          fontWeight: '600',\n          color: '#212529'\n        },\n        headerTintColor: '#007bff'\n      };\n    },\n    children: [(0, _jsxRuntime.jsx)(Tab.Screen, {\n      name: \"Timetable\",\n      component: _TimetableScreen.default,\n      options: {\n        title: 'Schedule',\n        headerShown: false\n      }\n    }), (0, _jsxRuntime.jsx)(Tab.Screen, {\n      name: \"Tasks\",\n      component: _TasksScreen.default,\n      options: {\n        title: 'Tasks',\n        headerShown: false\n      }\n    }), (0, _jsxRuntime.jsx)(Tab.Screen, {\n      name: \"Medications\",\n      component: _MedicineScreen.default,\n      options: {\n        title: 'Medications',\n        headerShown: false\n      }\n    }), (0, _jsxRuntime.jsx)(Tab.Screen, {\n      name: \"Progress\",\n      component: _ProgressScreen.default,\n      options: {\n        title: 'Progress',\n        headerShown: false\n      }\n    })]\n  });\n};\nvar RootNavigator = function RootNavigator() {\n  return (0, _jsxRuntime.jsx)(Stack.Navigator, {\n    screenOptions: Object.assign({\n      headerShown: false\n    }, customTransition),\n    children: (0, _jsxRuntime.jsx)(Stack.Screen, {\n      name: \"MainTabs\",\n      component: MainTabNavigator,\n      options: Object.assign({}, TransitionPresets.SlideFromRightIOS)\n    })\n  });\n};\nvar App = function App() {\n  var navigationRef = useRef(null);\n  useEffect(function () {\n    navigationService.setNavigationRef(navigationRef);\n    var handleDeepLink = function handleDeepLink(url) {\n      navigationService.handleDeepLink(url);\n    };\n    var linkingListener = Linking.addEventListener('url', function (_ref3) {\n      var url = _ref3.url;\n      handleDeepLink(url);\n    });\n    Linking.getInitialURL().then(function (url) {\n      if (url) {\n        handleDeepLink(url);\n      }\n    });\n    return function () {\n      linkingListener.remove();\n    };\n  }, []);\n  var linking = {\n    prefixes: ['productivityapp://'],\n    config: {\n      screens: {\n        MainTabs: {\n          screens: {\n            Timetable: 'timetable',\n            Tasks: 'tasks',\n            Medications: 'medications',\n            Progress: 'progress'\n          }\n        }\n      }\n    }\n  };\n  return (0, _jsxRuntime.jsx)(_AppContext.AppProvider, {\n    children: (0, _jsxRuntime.jsx)(_TimetableContext.TimetableProvider, {\n      children: (0, _jsxRuntime.jsx)(_TasksContext.TasksProvider, {\n        children: (0, _jsxRuntime.jsx)(_MedicationContext.MedicationProvider, {\n          children: (0, _jsxRuntime.jsx)(_ProgressContext.ProgressProvider, {\n            children: (0, _jsxRuntime.jsxs)(_native.NavigationContainer, {\n              ref: navigationRef,\n              linking: linking,\n              onReady: function onReady() {\n                console.log('Navigation ready');\n              },\n              children: [(0, _jsxRuntime.jsx)(OfflineIndicator, {}), (0, _jsxRuntime.jsx)(RootNavigator, {})]\n            })\n          })\n        })\n      })\n    })\n  });\n};\nvar _default = exports.default = App;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_native","_bottomTabs","_vectorIcons","_TimetableScreen","_TasksScreen","_MedicineScreen","_ProgressScreen","_AppContext","_TimetableContext","_TasksContext","_MedicationContext","_ProgressContext","_jsxRuntime","_this","_jsxFileName","Tab","createBottomTabNavigator","MainTabNavigator","jsxs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","jsx","Ionicons","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","borderTopWidth","borderTopColor","paddingBottom","paddingTop","height","tabBarLabelStyle","fontSize","fontWeight","headerStyle","borderBottomWidth","borderBottomColor","headerTitleStyle","headerTintColor","children","Screen","component","TimetableScreen","options","title","headerShown","TasksScreen","MedicineScreen","ProgressScreen","RootNavigator","Stack","Object","assign","customTransition","TransitionPresets","SlideFromRightIOS","App","navigationRef","useRef","useEffect","navigationService","setNavigationRef","handleDeepLink","url","linkingListener","Linking","addEventListener","_ref3","getInitialURL","then","remove","linking","prefixes","config","screens","MainTabs","Timetable","Tasks","Medications","Progress","AppProvider","TimetableProvider","TasksProvider","MedicationProvider","ProgressProvider","NavigationContainer","ref","onReady","console","log","OfflineIndicator","_default","exports","default"],"sources":["/Users/vaishnavkrishnan/Desktop/pd_app/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\n\n// Screens\nimport TimetableScreen from './src/screens/TimetableScreen';\nimport TasksScreen from './src/screens/TasksScreen';\nimport MedicineScreen from './src/screens/MedicineScreen';\nimport ProgressScreen from './src/screens/ProgressScreen';\n\n// Context Providers\nimport { AppProvider } from './src/context/AppContext';\nimport { TimetableProvider } from './src/context/TimetableContext';\nimport { TasksProvider } from './src/context/TasksContext';\nimport { MedicationProvider } from './src/context/MedicationContext';\nimport { ProgressProvider } from './src/context/ProgressContext';\n\n\n\n// Navigation types\nexport type RootTabParamList = {\n  Timetable: undefined;\n  Tasks: undefined;\n  Medications: undefined;\n  Progress: undefined;\n};\n\nconst Tab = createBottomTabNavigator<RootTabParamList>();\n\nconst MainTabNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: string;\n\n          switch (route.name) {\n            case 'Timetable':\n              iconName = 'calendar-outline';\n              break;\n            case 'Tasks':\n              iconName = 'checkmark-circle-outline';\n              break;\n            case 'Medications':\n              iconName = 'medical-outline';\n              break;\n            case 'Progress':\n              iconName = 'analytics-outline';\n              break;\n            default:\n              iconName = 'help-outline';\n          }\n\n          return <Ionicons name={iconName as any} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#007bff',\n        tabBarInactiveTintColor: '#6c757d',\n        tabBarStyle: {\n          backgroundColor: '#ffffff',\n          borderTopWidth: 1,\n          borderTopColor: '#e9ecef',\n          paddingBottom: 5,\n          paddingTop: 5,\n          height: 60,\n        },\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '500',\n        },\n        headerStyle: {\n          backgroundColor: '#ffffff',\n          borderBottomWidth: 1,\n          borderBottomColor: '#e9ecef',\n        },\n        headerTitleStyle: {\n          fontSize: 18,\n          fontWeight: '600',\n          color: '#212529',\n        },\n        headerTintColor: '#007bff',\n      })}>\n      <Tab.Screen \n        name=\"Timetable\" \n        component={TimetableScreen}\n        options={{\n          title: 'Schedule',\n          headerShown: false,\n        }}\n      />\n      <Tab.Screen \n        name=\"Tasks\" \n        component={TasksScreen}\n        options={{\n          title: 'Tasks',\n          headerShown: false,\n        }}\n      />\n      <Tab.Screen \n        name=\"Medications\" \n        component={MedicineScreen}\n        options={{\n          title: 'Medications',\n          headerShown: false,\n        }}\n      />\n      <Tab.Screen \n        name=\"Progress\" \n        component={ProgressScreen}\n        options={{\n          title: 'Progress',\n          headerShown: false,\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst RootNavigator = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        ...customTransition,\n      }}>\n      <Stack.Screen \n        name=\"MainTabs\" \n        component={MainTabNavigator}\n        options={{\n          ...TransitionPresets.SlideFromRightIOS,\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst App: React.FC = () => {\n  const navigationRef = useRef<NavigationContainerRef<RootTabParamList>>(null);\n\n  useEffect(() => {\n    // Set navigation reference for the service\n    navigationService.setNavigationRef(navigationRef);\n\n    // Handle deep links\n    const handleDeepLink = (url: string) => {\n      navigationService.handleDeepLink(url);\n    };\n\n    // Listen for deep links when app is already open\n    const linkingListener = Linking.addEventListener('url', ({ url }) => {\n      handleDeepLink(url);\n    });\n\n    // Handle deep link when app is opened from closed state\n    Linking.getInitialURL().then((url) => {\n      if (url) {\n        handleDeepLink(url);\n      }\n    });\n\n    return () => {\n      linkingListener.remove();\n    };\n  }, []);\n\n  const linking = {\n    prefixes: ['productivityapp://'],\n    config: {\n      screens: {\n        MainTabs: {\n          screens: {\n            Timetable: 'timetable',\n            Tasks: 'tasks',\n            Medications: 'medications',\n            Progress: 'progress',\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <AppProvider>\n      <TimetableProvider>\n        <TasksProvider>\n          <MedicationProvider>\n            <ProgressProvider>\n              <NavigationContainer\n                ref={navigationRef}\n                linking={linking}\n                onReady={() => {\n                  console.log('Navigation ready');\n                }}>\n                <OfflineIndicator />\n                <RootNavigator />\n              </NavigationContainer>\n            </ProgressProvider>\n          </MedicationProvider>\n        </TasksProvider>\n      </TimetableProvider>\n    </AppProvider>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}